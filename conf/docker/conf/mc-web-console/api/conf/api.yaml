# mc-admin-cli/conf/api.yaml
# Ïö∞ÏÑ† api.yaml ÏùÑ ÎÇ¥Ïû•Ìï©ÎãàÎã§. Ï†ïÏãù Î¶¥Î¶¨Ï¶à Ïù¥ÌõÑ github Í∏∞Î∞ò ÎßÅÌÅ¨ ÏòàÏ†ï

services:
  mc-infra-connector:
    version: 0.11.1
    baseurl: http://mc-infra-connector:1024/spider
    auth:
      type: basic
      username:
      password:

  mc-iam-manager:
    version: 0.4.5
    baseurl: http://mc-iam-manager:5000
    auth:
      type: bearer

  mc-infra-manager:
    version: 0.11.1
    baseurl: http://mc-infra-manager:1323/tumblebug
    auth:
      type: basic
      username: default
      password: default

  mc-web-console:
    version: 0.4.5
    baseurl: http://mc-web-console:3000
    auth:
      type: bearer

  mc-observability:
    version: 0.4.0
    baseurl: http://mc-observability-manager:18080
    auth:

  mc-application-manager:
    version: 0.4.0
    baseurl: http://mc-application-manager:18084
    auth:

  mc-workflow-manager:
    version: 0.4.0
    baseurl: http://mc-workflow-manager:18083
    auth:

  mc-cost-optimizer:
    version: 0.4.0
    baseurl: http://mc-cost-optimizer:7780
    auth:

  mc-data-manager:
    version: 0.4.0
    baseurl: http://mc-data-manager:3300
    auth:

  # sample:
  #   baseurl: http://localhost:1323/test
  #   auth:
  #     type: ""

serviceActions:
  mc-infra-connector:
    Remove-Nodegroup:
      method: delete
      resourcePath: /cluster/{Name}/nodegroup/{NodeGroupName}
      description: "Remove an existing Node Group from a Cluster."
    List-Connection-Configs:
      method: get
      resourcePath: /connectionconfig
      description: "Retrieve a list of registered Connection Configs."
    Create-Connection-Config:
      method: post
      resourcePath: /connectionconfig
      description: "Create a new Connection Config. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#4-cloud-connection-configuration-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]"
    Count-Subnets-By-Connection:
      method: get
      resourcePath: /countsubnet/{ConnectionName}
      description: "Get the total number of Subnets for a specific connection."
    Count-Vpcs-By-Connection:
      method: get
      resourcePath: /countvpc/{ConnectionName}
      description: "Get the total number of VPCs for a specific connection."
    Upload-Cloud-Driver:
      method: post
      resourcePath: /driver/upload
      description: "Upload a Cloud Driver library file."
    Health-Check-Readyz:
      method: get
      resourcePath: /readyz
      description: "Checks the health of CB-Spider service and its dependencies via /readyz endpoint. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]"
    Unregister-Subnet:
      method: delete
      resourcePath: /regsubnet/{Name}
      description: "Unregister a Subnet from a specified VPC."
    Get-Vm-Status:
      method: get
      resourcePath: /vmstatus/{Name}
      description: "Retrieve the status of a specific Virtual Machine (VM)."
    List-All-Vpc:
      method: get
      resourcePath: /allvpc
      description: "Retrieve a comprehensive list of all Virtual Private Clouds (VPCs) associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Any-Call:
      method: post
      resourcePath: /anycall
      description: "Execute a custom function (FID) with key-value parameters through AnyCall. üï∑Ô∏è [[Development Guide](https://github.com/cloud-barista/cb-spider/wiki/AnyCall-API-Extension-Guide)]"
    Get-Credential:
      method: get
      resourcePath: /credential/{CredentialName}
      description: "Retrieve details of a specific Credential."
    Unregister-Credential:
      method: delete
      resourcePath: /credential/{CredentialName}
      description: "Unregister a specific Credential."
    Get-Disk:
      method: get
      resourcePath: /disk/{Name}
      description: "Retrieve details of a specific Disk."
    Delete-Disk:
      method: delete
      resourcePath: /disk/{Name}
      description: "Delete a specified Disk."
    List-Product-Family:
      method: get
      resourcePath: /productfamily/{RegionName}
      description: "Retrieve a list of Product Families associated with a specific connection and region. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Price-Info-and-Cloud-Driver-API)], üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/RestAPI-Multi%E2%80%90Cloud-Price-Information-Guide)]"
    Get-Region:
      method: get
      resourcePath: /region/{RegionName}
      description: "Retrieve details of a specific Region."
    Unregister-Region:
      method: delete
      resourcePath: /region/{RegionName}
      description: "Unregister a specific Region."
    Remove-Csp-Subnet:
      method: delete
      resourcePath: /vpc/{VPCName}/cspsubnet/{Id}
      description: "Remove an existing CSP Subnet from a VPC."
    List-All-Vm:
      method: get
      resourcePath: /allvm
      description: "Retrieve a comprehensive list of all Virtual Machines (VMs) associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Get-Myimage:
      method: get
      resourcePath: /myimage/{Name}
      description: "Retrieve details of a specific MyImage."
    Delete-Myimage:
      method: delete
      resourcePath: /myimage/{Name}
      description: "Delete a specified MyImage."
    Count-All-Clusters:
      method: get
      resourcePath: /countcluster
      description: "Get the total number of Clusters across all connections."
    Count-All-Subnets:
      method: get
      resourcePath: /countsubnet
      description: "Get the total number of Subnets across all connections."
    Get-Image:
      method: get
      resourcePath: /vmimage/{Name}
      description: "Retrieve details of a specific Public Image. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/How-to-get-Image-List-with-REST-API)]"
    Remove-Subnet:
      method: delete
      resourcePath: /vpc/{VPCName}/subnet/{SubnetName}
      description: "Remove an existing Subnet from a VPC."
    List-All-Cluster:
      method: get
      resourcePath: /allcluster
      description: "Retrieve a comprehensive list of all Clusters associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Upgrade-Cluster:
      method: put
      resourcePath: /cluster/{Name}/upgrade
      description: "Upgrade a Cluster to a specified version."
    Count-Clusters-By-Connection:
      method: get
      resourcePath: /countcluster/{ConnectionName}
      description: "Get the total number of Clusters for a specific connection."
    Count-All-Nlbs:
      method: get
      resourcePath: /countnlb
      description: "Get the total number of Network Load Balancers (NLBs) across all connections."
    Attach-Disk:
      method: put
      resourcePath: /disk/{Name}/attach
      description: "Attach an existing Disk to a VM."
    Get-Cluster-Owner-Vpc:
      method: post
      resourcePath: /getclusterowner
      description: "Retrieve the owner VPC of a specified Cluster."
    Count-Vms-By-Connection:
      method: get
      resourcePath: /countvm/{ConnectionName}
      description: "Get the total number of Virtual Machines (VMs) for a specific connection."
    Get-Region-Zone-Preconfig:
      method: get
      resourcePath: /preconfig/regionzone/{Name}
      description: "Retrieve details of a specific pre-configured Region Zone based on driver and credential names. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]"
    Get-Price-Info:
      method: post
      resourcePath: /priceinfo/{ProductFamily}/{RegionName}
      description: 'Retrieve price details of a specific Product Family in a specific Region. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Price-Info-and-Cloud-Driver-API)], üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/RestAPI-Multi%E2%80%90Cloud-Price-Information-Guide)] <br> * example body: {"connectionName":"aws-connection","FilterList":[{"Key":"instanceType","Value":"t2.micro"}]}'
    Register-Vm:
      method: post
      resourcePath: /regvm
      description: "Register a new Virtual Machine (VM) with the specified name and CSP ID."
    List-Key:
      method: get
      resourcePath: /keypair
      description: "Retrieve a list of KeyPairs associated with a specific connection."
    Create-Key:
      method: post
      resourcePath: /keypair
      description: "Create a new KeyPair with the specified configurations. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#5-vm-keypair-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%A0%9C%EC%96%B4)]"
    Unregister-Vm:
      method: delete
      resourcePath: /regvm/{Name}
      description: "Unregister a Virtual Machine (VM) with the specified name."
    List-All-Securitygroups:
      method: get
      resourcePath: /allsecuritygroup
      description: "Retrieve a comprehensive list of all Security Groups associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Delete-Csp-Securitygroup:
      method: delete
      resourcePath: /cspsecuritygroup/{Id}
      description: "Delete a specified CSP Security Group."
    List-Preconfigured-Original-Org-Region:
      method: get
      resourcePath: /preconfig/orgregion
      description: "Retrieve a list of pre-configured Original Regions based on driver and credential names. <br> The response structure may vary depending on the request DriverName and CredentialName."
    Unregister-Vpc:
      method: delete
      resourcePath: /regvpc/{Name}
      description: "Unregister a VPC with the specified name."
    List-Org-Vm-Spec:
      method: get
      resourcePath: /vmorgspec
      description: "Retrieve a list of Original VM Specs associated with a specific connection. <br> The response structure may vary depending on the request ConnectionName."
    Get-Org-Vm-Spec:
      method: get
      resourcePath: /vmorgspec/{Name}
      description: "Retrieve details of a specific Original VM Spec."
    List-All-Key:
      method: get
      resourcePath: /allkeypair
      description: "Retrieve a comprehensive list of all KeyPairs associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Get-Region-Zone:
      method: get
      resourcePath: /regionzone/{Name}
      description: "Retrieve details of a specific Region Zone. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]"
    Add-Rules-Securitygroup:
      method: post
      resourcePath: /securitygroup/{SGName}/rules
      description: "Add new rules to a Security Group."
    Remove-Rules-Securitygroup:
      method: delete
      resourcePath: /securitygroup/{SGName}/rules
      description: "Remove existing rules from a Security Group."
    Delete-Csp-Myimage:
      method: delete
      resourcePath: /cspmyimage/{Id}
      description: "Delete a specified CSP MyImage."
    Unregister-Myimage:
      method: delete
      resourcePath: /regmyimage/{Name}
      description: "Unregister a MyImage with the specified name."
    Register-Nlb:
      method: post
      resourcePath: /regnlb
      description: "Register a new Network Load Balancer (NLB) with the specified name and CSP ID."
    Get-Securitygroup:
      method: get
      resourcePath: /securitygroup/{Name}
      description: "Retrieve details of a specific Security Group."
    Delete-Securitygroup:
      method: delete
      resourcePath: /securitygroup/{Name}
      description: "Delete a specified Security Group."
    Terminate-Vm:
      method: delete
      resourcePath: /vm/{Name}
      description: "Terminate a specified Virtual Machine (VM)."
    Get-Vm:
      method: get
      resourcePath: /vm/{Name}
      description: "Retrieve details of a specific Virtual Machine (VM)."
    Register-Subnet:
      method: post
      resourcePath: /regsubnet
      description: "Register a new Subnet within a specified VPC."
    Add-Subnet:
      method: post
      resourcePath: /vpc/{VPCName}/subnet
      description: "Add a new Subnet to an existing VPC."
    List-Cloudos:
      method: get
      resourcePath: /cloudos
      description: "Retrieve a list of supported Cloud OS."
    Count-All-Keys:
      method: get
      resourcePath: /countkeypair
      description: "Get the total number of KeyPairs across all connections."
    Count-Securitygroups-By-Connection:
      method: get
      resourcePath: /countsecuritygroup/{ConnectionName}
      description: "Get the total number of Security Groups for a specific connection."
    Health-Check-Ping:
      method: get
      resourcePath: /ping
      description: "Checks the health of CB-Spider service and its dependencies via /ping endpoint. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]"
    List-Vm-Status:
      method: get
      resourcePath: /vmstatus
      description: "Retrieve a list of statuses for Virtual Machines (VMs) associated with a specific connection."
    Count-Connections-By-Provider:
      method: get
      resourcePath: /countconnectionconfig/{ProviderName}
      description: "Get the total number of connections for a specific provider."
    Delete-Csp-Cluster:
      method: delete
      resourcePath: /cspcluster/{Id}
      description: "Delete a specified CSP Cluster."
    Unregister-Cluster:
      method: delete
      resourcePath: /regcluster/{Name}
      description: "Unregister a Cluster with the specified name."
    Register-Myimage:
      method: post
      resourcePath: /regmyimage
      description: "Register a new MyImage with the specified name and CSP ID."
    Unregister-Securitygroup:
      method: delete
      resourcePath: /regsecuritygroup/{Name}
      description: "Unregister a Security Group with the specified name."
    Get-Vm-Spec:
      method: get
      resourcePath: /vmspec/{Name}
      description: "Retrieve details of a specific VM spec. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-vm-spec-%EC%A0%95%EB%B3%B4-%EC%A0%9C%EA%B3%B5)]"
    List-Cluster:
      method: get
      resourcePath: /cluster
      description: "Retrieve a list of Clusters associated with a specific connection."
    Create-Cluster:
      method: post
      resourcePath: /cluster
      description: "Create a new Cluster with specified configurations. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Provider-Managed-Kubernetes-and-Driver-API)] <br> * NodeGroupList is optional, depends on CSP type: <br> &nbsp;- Type-I (e.g., Tencent, Alibaba): requires separate Node Group addition after Cluster creation. <br> &nbsp;- Type-II (e.g., Azure, NHN): mandates at least one Node Group during initial Cluster creation."
    Count-All-Myimages:
      method: get
      resourcePath: /countmyimage
      description: "Get the total number of MyImages across all connections."
    Detach-Disk:
      method: put
      resourcePath: /disk/{Name}/detach
      description: "Detach an existing Disk from a VM."
    List-Cloud-Drivers:
      method: get
      resourcePath: /driver
      description: "Retrieve a list of registered Cloud Drivers."
    Register-Cloud-Driver:
      method: post
      resourcePath: /driver
      description: "Register a new Cloud Driver. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#1-cloud-driver-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]"
    List-Nlb:
      method: get
      resourcePath: /nlb
      description: "Retrieve a list of Network Load Balancers (NLBs) associated with a specific connection."
    Create-Nlb:
      method: post
      resourcePath: /nlb
      description: "Create a new Network Load Balancer (NLB) with specified configurations. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Network-Load-Balancer-and-Driver-API)]"
    List-Org-Zone:
      method: get
      resourcePath: /orgzone
      description: "Retrieve a list of Original Zones associated with a specific connection. <br> The response structure may vary depending on the request ConnectionName."
    Health-Check-Healthcheck:
      method: get
      resourcePath: /healthcheck
      description: "Checks the health of CB-Spider service and its dependencies via /healthcheck endpoint. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]"
    Delete-Key:
      method: delete
      resourcePath: /keypair/{Name}
      description: "Delete a specified KeyPair."
    Get-Key:
      method: get
      resourcePath: /keypair/{Name}
      description: "Retrieve details of a specific KeyPair."
    List-Image:
      method: get
      resourcePath: /vmimage
      description: "Retrieve a list of Public Images associated with a specific connection. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/How-to-get-Image-List-with-REST-API)]"
    Get-Cluster:
      method: get
      resourcePath: /cluster/{Name}
      description: "Retrieve details of a specific Cluster."
    Delete-Cluster:
      method: delete
      resourcePath: /cluster/{Name}
      description: "Delete a specified Cluster."
    Get-Csp-Vm:
      method: get
      resourcePath: /cspvm/{Id}
      description: "Retrieve details of a specific CSP Virtual Machine (VM)."
    Terminate-Csp-Vm:
      method: delete
      resourcePath: /cspvm/{Id}
      description: "Terminate a specified CSP Virtual Machine (VM)."
    Health-Check-Health:
      method: get
      resourcePath: /health
      description: "Checks the health of CB-Spider service and its dependencies via /health endpoint. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]"
    Register-Vpc:
      method: post
      resourcePath: /regvpc
      description: "Register a new Virtual Private Cloud (VPC) with the specified name and CSP ID."
    Unregister-Nlb:
      method: delete
      resourcePath: /regnlb/{Name}
      description: "Unregister a Network Load Balancer (NLB) with the specified name."
    Get-Sg-Owner-Vpc:
      method: post
      resourcePath: /getsecuritygroupowner
      description: "Retrieve the owner VPC of a specified Security Group."
    Create-Vpc:
      method: post
      resourcePath: /vpc
      description: "Create a new Virtual Private Cloud (VPC) with specified subnet configurations. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#3-vpcsubnet-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%A0%9C%EC%96%B4)]"
    List-Vpc:
      method: get
      resourcePath: /vpc
      description: "Retrieve a list of Virtual Private Clouds (VPCs) associated with a specific connection."
    Control-Vm:
      method: put
      resourcePath: /controlvm/{Name}
      description: "Control the state of a Virtual Machine (VM) such as suspend, resume, or reboot."
    List-All-Myimage:
      method: get
      resourcePath: /allmyimage
      description: "Retrieve a comprehensive list of all MyImages associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Count-Disks-By-Connection:
      method: get
      resourcePath: /countdisk/{ConnectionName}
      description: "Get the total number of Disks for a specific connection."
    List-Credentials:
      method: get
      resourcePath: /credential
      description: "Retrieve a list of registered Credentials."
    Register-Credential:
      method: post
      resourcePath: /credential
      description: "Register a new Credential. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-cloud-credential-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]"
    Delete-Csp-Disk:
      method: delete
      resourcePath: /cspdisk/{Id}
      description: "Delete a specified CSP Disk."
    Register-Key:
      method: post
      resourcePath: /regkeypair
      description: "Register a new KeyPair with the specified name and CSP ID."
    List-All-Nlb:
      method: get
      resourcePath: /allnlb
      description: "Retrieve a comprehensive list of all Network Load Balancers (NLBs) associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Set-Nodegroup-Autoscaling:
      method: put
      resourcePath: /cluster/{Name}/nodegroup/{NodeGroupName}/onautoscaling
      description: "Enable or disable auto scaling for a Node Group in a Cluster."
    List-Vm-Spec:
      method: get
      resourcePath: /vmspec
      description: "Retrieve a list of VM specs associated with a specific connection. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-vm-spec-%EC%A0%95%EB%B3%B4-%EC%A0%9C%EA%B3%B5)]"
    Count-All-Disks:
      method: get
      resourcePath: /countdisk
      description: "Get the total number of Disks across all connections."
    Register-Cluster:
      method: post
      resourcePath: /regcluster
      description: "Register a new Cluster with the specified VPC and CSP ID."
    Register-Securitygroup:
      method: post
      resourcePath: /regsecuritygroup
      description: "Register a new Security Group with the specified name and CSP ID."
    Get-Vpc:
      method: get
      resourcePath: /vpc/{Name}
      description: "Retrieve details of a specific Virtual Private Cloud (VPC)."
    Delete-Vpc:
      method: delete
      resourcePath: /vpc/{Name}
      description: "Delete a specified Virtual Private Cloud (VPC)."
    Get-Connection-Config:
      method: get
      resourcePath: /connectionconfig/{ConfigName}
      description: "Retrieve details of a specific Connection Config."
    Delete-Connection-Config:
      method: delete
      resourcePath: /connectionconfig/{ConfigName}
      description: "Delete a specific Connection Config."
    Get-Cloud-Driver:
      method: get
      resourcePath: /driver/{DriverName}
      description: "Retrieve details of a specific Cloud Driver."
    Unregister-Cloud-Driver:
      method: delete
      resourcePath: /driver/{DriverName}
      description: "Unregister a specific Cloud Driver."
    Count-Nlbs-By-Connection:
      method: get
      resourcePath: /countnlb/{ConnectionName}
      description: "Get the total number of Network Load Balancers (NLBs) for a specific connection."
    Delete-Nlb:
      method: delete
      resourcePath: /nlb/{Name}
      description: "Delete a specified Network Load Balancer (NLB)."
    Get-Nlb:
      method: get
      resourcePath: /nlb/{Name}
      description: "Retrieve details of a specific Network Load Balancer (NLB)."
    Add-Nlb-Vms:
      method: post
      resourcePath: /nlb/{Name}/vms
      description: "Add a new set of VMs to an existing Network Load Balancer (NLB)."
    Remove-Nlb-Vms:
      method: delete
      resourcePath: /nlb/{Name}/vms
      description: "Remove a set of VMs from an existing Network Load Balancer (NLB)."
    List-Org-Region:
      method: get
      resourcePath: /orgregion
      description: "Retrieve a list of Original Regions associated with a specific connection. <br> The response structure may vary depending on the request ConnectionName."
    Count-All-Vms:
      method: get
      resourcePath: /countvm
      description: "Get the total number of Virtual Machines (VMs) across all connections."
    Count-All-Vpcs:
      method: get
      resourcePath: /countvpc
      description: "Get the total number of VPCs across all connections."
    Delete-Csp-Key:
      method: delete
      resourcePath: /cspkeypair/{Id}
      description: "Delete a specified CSP KeyPair."
    Register-Disk:
      method: post
      resourcePath: /regdisk
      description: "Register a new Disk with the specified name, zone, and CSP ID."
    Count-All-Securitygroups:
      method: get
      resourcePath: /countsecuritygroup
      description: "Get the total number of Security Groups across all connections."
    Delete-Csp-Vpc:
      method: delete
      resourcePath: /cspvpc/{Id}
      description: "Delete a specified CSP Virtual Private Cloud (VPC)."
    Get-Nlb-Owner-Vpc:
      method: post
      resourcePath: /getnlbowner
      description: "Retrieve the owner VPC of a specified Network Load Balancer (NLB)."
    Get-Vmgroup-Healthinfo:
      method: get
      resourcePath: /nlb/{Name}/health
      description: "Retrieve the health information of the VM group in a specified Network Load Balancer (NLB)."
    List-Regions:
      method: get
      resourcePath: /region
      description: "Retrieve a list of registered Regions."
    Register-Region:
      method: post
      resourcePath: /region
      description: "Register a new Region. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#3-cloud-regionzone-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]"
    Create-Securitygroup:
      method: post
      resourcePath: /securitygroup
      description: "Create a new Security Group with specified rules and tags. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Security-Group-Rules-and-Driver-API)], üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#4-securitygroup-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%A0%9C%EC%96%B4)]"
    List-Securitygroup:
      method: get
      resourcePath: /securitygroup
      description: "Retrieve a list of Security Groups associated with a specific connection."
    List-All-Disk:
      method: get
      resourcePath: /alldisk
      description: "Retrieve a comprehensive list of all Disks associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Add-Nodegroup:
      method: post
      resourcePath: /cluster/{Name}/nodegroup
      description: "Add a new Node Group to an existing Cluster."
    List-Disk:
      method: get
      resourcePath: /disk
      description: "Retrieve a list of Disks associated with a specific connection."
    Create-Disk:
      method: post
      resourcePath: /disk
      description: "Create a new Disk with the specified configuration. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Disk-and-Driver-API)], [[Snapshot-MyImage,Disk Guide](https://github.com/cloud-barista/cb-spider/wiki/VM-Snapshot,-MyImage-and-Disk-Overview)]"
    List-Region-Zone-Preconfig:
      method: get
      resourcePath: /preconfig/regionzone
      description: "Retrieve a list of pre-configured Region Zones based on driver and credential names. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]"
    Delete-Csp-Nlb:
      method: delete
      resourcePath: /cspnlb/{Id}
      description: "Delete a specified CSP Network Load Balancer (NLB)."
    List-Region-Zone:
      method: get
      resourcePath: /regionzone
      description: "Retrieve a list of Region Zones associated with a specific connection. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]"
    Count-All-Connections:
      method: get
      resourcePath: /countconnectionconfig
      description: "Get the total number of connections."
    Count-Keys-By-Connection:
      method: get
      resourcePath: /countkeypair/{ConnectionName}
      description: "Get the total number of KeyPairs for a specific connection."
    Increase-Disk-Size:
      method: put
      resourcePath: /disk/{Name}/size
      description: "Increase the size of an existing disk."
    Change-Nodegroup-Scaling:
      method: put
      resourcePath: /cluster/{Name}/nodegroup/{NodeGroupName}/autoscalesize
      description: "Change the scaling settings for a Node Group in a Cluster."
    List-Myimage:
      method: get
      resourcePath: /myimage
      description: "Retrieve a list of MyImages associated with a specific connection."
    Snapshot-Vm:
      method: post
      resourcePath: /myimage
      description: "Create a new MyImage snapshot from a specified VM. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/MyImage-and-Driver-API)], [[Snapshot-MyImage,Disk Guide](https://github.com/cloud-barista/cb-spider/wiki/VM-Snapshot,-MyImage-and-Disk-Overview)]"
    Unregister-Key:
      method: delete
      resourcePath: /regkeypair/{Name}
      description: "Unregister a KeyPair with the specified name."
    Start-Vm:
      method: post
      resourcePath: /vm
      description: "Start a new Virtual Machine (VM) with specified configurations. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-%EB%A9%80%ED%8B%B0%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-vm-%EC%9D%B8%ED%94%84%EB%9D%BC-%EC%9E%90%EC%9B%90-%EC%A0%9C%EC%96%B4multi-cloud-vm-infra-resource-control)], [[Snapshot-MyImage,Disk Guide](https://github.com/cloud-barista/cb-spider/wiki/VM-Snapshot,-MyImage-and-Disk-Overview)]"
    List-Vm:
      method: get
      resourcePath: /vm
      description: "Retrieve a list of Virtual Machines (VMs) associated with a specific connection."
    Get-Cloudos-Metainfo:
      method: get
      resourcePath: /cloudos/metainfo/{CloudOSName}
      description: "Retrieve metadata information for a specific Cloud OS."
    Count-Myimages-By-Connection:
      method: get
      resourcePath: /countmyimage/{ConnectionName}
      description: "Get the total number of MyImages for a specific connection."
    Get-Vm-Using-Rs:
      method: get
      resourcePath: /getvmusingresources
      description: "Retrieve details of a VM using resource ID."
    Unregister-Disk:
      method: delete
      resourcePath: /regdisk/{Name}
      description: "Unregister a Disk with the specified name."

  mc-iam-manager:
    Searchrolesbyname:
      method: get
      resourcePath: /api/role/name/{roleName}
      description: "role Í≤ÄÏÉâ"
    Logout:
      method: post
      resourcePath: /api/auth/logout
      description: "AccessTokenÎ∞è RefreshTokenÏùÑ Î∞õÏïÑ Ìï¥Îãπ ÌÜ†ÌÅ∞ ÌååÍ∏∞"
    Deleteresourcepermissionpolicesbyoperationid:
      method: delete
      resourcePath: /api/permission/framewrok/{framework}/operationid/{operationid}/remove
      description: "Í∂åÌïúÏùÑ OperationIdÎ•º Í∏∞Î∞òÏúºÎ°ú Î¶¨ÏÜåÏä§ Í∂åÌïúÏùÑ ÏóÖÎç∞Ïù¥Ìä∏Ìï©ÎãàÎã§."
    listProjects:
      method: post
      resourcePath: /api/projects/list
      description: "project Î™©Î°ù Ï°∞Ìöå"
    createProject:
      method: post
      resourcePath: /api/projects
      description: "project ÏÉùÏÑ±"
    Getresources:
      method: get
      resourcePath: /api/resource
      description: "Î¶¨ÏÜåÏä§Ïùò Ï†ïÎ≥¥Î•º Í≤ÄÏÉâÌï©ÎãàÎã§."
    Createresource:
      method: post
      resourcePath: /api/resource
      description: "Î¶¨ÏÜåÏä§Î•º ÏÉùÏÑ±Ìï©ÎãàÎã§."
    Getrolelist:
      method: post
      resourcePath: /api/roles/list
      description: "role Ï†ÑÏ≤¥ Î™©Î°ù Ï°∞Ìöå"
    Getrolescsproles:
      method: get
      resourcePath: /api/roles/csp-roles/id/{roleId}
      description: "roleÎ≥Ñ CSP role Î™©Î°ù Ï°∞Ìöå"
    listCSPRoles:
      method: post
      resourcePath: /api/roles/csp/list
      description: "CSPÏóê Ï†ïÏùòÎêú Ïó≠Ìï† Î™©Î°ù Ï°∞Ìöå"
    Createrole:
      method: post
      resourcePath: /api/roles
      description: "role ÏÉùÏÑ±"
    Updaterole:
      method: put
      resourcePath: /api/roles/id/{roleId}
      description: "role ÏàòÏ†ï"
    Syncrolelistwithkeycloak:
      method: get
      resourcePath: /api/tool/keycloak/role/sync
      description: "Ïó∞Í≤∞Îêú TB(mcinframanager)Ïùò NS Î¶¨Ïä§Ìä∏Î•º Project List Î°ú Îì±Î°ù.  \n  \nÍ∏∞Ï°¥ Îì±Î°ùÎêú project ÏôÄ Ï§ëÎ≥µÏù¥ Î∞úÏÉùÌïòÎ©¥ Ïò§Î•ò Î∞úÏÉù. ÏÉàÎ°úÏö¥ ÌôòÍ≤ΩÏóêÏÑú Ï≤´ Ìöå Ïã§ÌñâÌïòÎäî Í≤ÉÏùÑ Ï∂îÏ≤ú."
    Searchworkspacesbyname:
      method: get
      resourcePath: /api/ws/workspace/{workspaceName}
      description: "workspace Í≤ÄÏÉâ"
    Readyz:
      method: get
      resourcePath: /readyz
      description: "mc-iam-managerÍ∞Ä Ï†ïÏÉÅÏ†ÅÏúºÎ°ú ÏûëÎèôÏ§ëÏù∏ÏßÄ Îã®Ïàú ÌôïÏù∏Ìï©ÎãàÎã§."
    Getwpmappinglistorderbyworkspace:
      method: get
      resourcePath: /api/wsprj
      description: "workspace - projects mapping workspace Í∏∞Ï§Ä Î™®Îì† Î™©Î°ù Ï°∞Ìöå"
    Createwpmapping:
      method: post
      resourcePath: /api/wsprj
      description: "workspace - projects mapping ÏÉùÏÑ±"
    addProjectToWorkspace:
      method: post
      resourcePath: /api/workspaces/assign/projects
      description: "workspaceÏóê project Îì±Î°ù"
    Getworkspaceuserrolemappinglistbyworkspaceid:
      method: get
      resourcePath: /api/wsuserrole/workspace/id/{workspaceId}
      description: "workspace - user - role mapping Î™©Î°ù workspace Í∏∞Ï§Ä Ï°∞Ìöå"
    Login:
      method: post
      resourcePath: /api/auth/login
      description: "ID/PasswordÎ•º Î∞õÏïÑ JWT ÏÑ∏ÏÖò ÌÜ†ÌÅ∞ÏùÑ Î∞òÌôò"
    Gettokeninfo:
      method: get
      resourcePath: /api/auth/tokeninfo
      description: "Ïú†Ï†Ä Ï†ïÎ≥¥ Ï°∞Ìöå"
    Getcurrentpermissioncsv:
      method: get
      resourcePath: /api/permission/file/framework/{framework}
      description: "ÌòÑÏû¨ Í∂åÌïúÏùÑ CSV ÌòïÌÉúÎ°ú Í∞ÄÏ†∏ÏòµÎãàÎã§."
    Importpermissionbycsv:
      method: post
      resourcePath: /api/permission/file/framework/{framework}
      description: "CSV Í∏∞Î∞òÏúºÎ°ú Í∂åÌïúÏùÑ ÏóÖÎç∞Ïù¥Ìä∏ Ìï©ÎãàÎã§."
    Getprojectbyid:
      method: get
      resourcePath: /api/prj/project/id/{projectId}
      description: "project Îã®Í±¥ Ï°∞Ìöå"
    Updateprojectbyid:
      method: put
      resourcePath: /api/prj/project/id/{projectId}
      description: "project ÏàòÏ†ï"
    Deleteprojectbyid:
      method: delete
      resourcePath: /api/prj/project/id/{projectId}
      description: "project ÏÇ≠Ï†ú"
    deleteWorkspace:
      method: delete
      resourcePath: /api/workspaces/id/{workspaceId}
      description: "workspace ÏÇ≠Ï†ú"
    getWorkspaceByID:
      method: get
      resourcePath: /api/workspaces/id/{workspaceId}
      description: "workspace Îã®Í±¥ Ï°∞Ìöå"
    updateWorkspace:
      method: put
      resourcePath: /api/workspaces/id/{workspaceId}
      description: "workspace ÏàòÏ†ï"
    Getcerts:
      method: get
      resourcePath: /api/auth/certs
      description: "Ïú†Ï†Ä ÌÜ†ÌÅ∞Ïùò ÏÇ¨Ïö©Í∞ÄÎä• Ïú†Î¨¥"
    Authgetuservalidate:
      method: get
      resourcePath: /api/auth/validate
      description: "Ïú†Ï†Ä ÌÜ†ÌÅ∞Ïùò ÏÇ¨Ïö©Í∞ÄÎä• Ïú†Î¨¥"
    Getpermission:
      method: get
      resourcePath: /api/permission/framewrok/{framework}/operationid/{operationid}
      description: "Í∂åÌïúÏùÑ Í≤ÄÏÉâÌï©ÎãàÎã§."
    Updateresourcepermissionbyoperationid:
      method: put
      resourcePath: /api/permission/framewrok/{framework}/operationid/{operationid}
      description: "Í∂åÌïúÏùÑ OperationIdÎ•º Í∏∞Î∞òÏúºÎ°ú Î¶¨ÏÜåÏä§ Í∂åÌïúÏùÑ ÏóÖÎç∞Ïù¥Ìä∏Ìï©ÎãàÎã§."
    Activeuser:
      method: post
      resourcePath: /api/user/active
      description: "Í∂åÌïú ÏûàÎäî ÏÇ¨Ïö©ÏûêÍ∞Ä Ìï¥Îãπ Ïú†Ï†ÄÎ•º ÌôúÏÑ±ÌôîÌï©ÎãàÎã§."
    Getworkspaceuserrolemappinglistorderbyworkspace:
      method: get
      resourcePath: /api/wsuserrole
      description: "workspace - user - role mapping Î™©Î°ù workspace Í∏∞Ï§Ä Ï†ÑÏ≤¥ Ï°∞Ìöå"
    Createworkspaceuserrolemappingbyname:
      method: post
      resourcePath: /api/wsuserrole
      description: "workspace - user - role mapping ÏÉùÏÑ±"
    Getallavailablemenus:
      method: post
      resourcePath: /api/users/menus/list
      description: "Ìï¥Îãπ ÌîÑÎ†àÏûÑÏõåÌÅ¨ ÏÇ¨Ïö©ÏûêÏóêÍ≤å Ìï†ÎãπÎêú Î©îÎâ¥ Î¶¨Ïä§Ìä∏Î•º Î∞òÌôòÌï©ÎãàÎã§."
    Getmappedmenusbyrolelist:
      method: post
      resourcePath: /api/menus/platform-roles/list
      description: "Ìï¥Îãπ ÌîÑÎ†àÏûÑÏõåÌÅ¨ Ïó≠Ìï†Ïóê Ìï†ÎãπÎêú Î©îÎâ¥ Î¶¨Ïä§Ìä∏Î•º Î∞òÌôòÌï©ÎãàÎã§."
    Deleteuser:
      method: delete
      resourcePath: /api/user/id/{userid}
      description: "ÏÇ¨Ïö©ÏûêÎ•º ÏÇ≠Ï†úÌï©ÎãàÎã§."
    Updateuser:
      method: put
      resourcePath: /api/user/id/{userid}
      description: "ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥Î•º ÏóÖÎç∞Ïù¥Ìä∏ Ìï©ÎãàÎã§."
    Createworkspace:
      method: post
      resourcePath: /api/workspaces
      description: "workspace ÏÉùÏÑ±"
    listWorkspaces:
      method: post
      resourcePath: /api/workspaces/list
      description: "workspace Î™©Î°ù Ï°∞Ìöå"
    listMciamPermissions:
      method: post
      resourcePath: /api/permissions/mciam/list
      description: "Î™®Îì† Í∂åÌïúÏùÑ Í∞ÄÏ†∏ÏòµÎãàÎã§."
    listUsersAndRolesByWorkspaces:
      method: post
      resourcePath: /api/workspaces/id/{workspaceId}/users/list
      description: "workspace Î™©Î°ù Ï°∞Ìöå"
    getWorkspaceProjectsByWorkspaceId:
      method: get
      resourcePath: /api/workspaces/id/{workspaceId}/projects/list
    ListUsersAndRolesByWorkspaces:
      method: post
      resourcePath: /api/workspaces/id/{workspaceId}/users/list
    listWorkspaceProjects:
      method: post
      resourcePath: /api/workspaces/projects/list
    getTempCredentialProviders:
      method: get
      resourcePath: /api/auth/temp-credential-csps
      description: "ÏûÑÏãú ÏûêÍ≤© Ï¶ùÎ™ÖÏùÑ ÏßÄÏõêÌïòÎäî CSP Î™©Î°ù Ï°∞Ìöå"
    Appendresourcepermissionpolicesbyoperationid:
      method: put
      resourcePath: /api/permission/framewrok/{framework}/operationid/{operationid}/append
      description: "Í∂åÌïúÏùÑ OperationIdÎ•º Í∏∞Î∞òÏúºÎ°ú Î¶¨ÏÜåÏä§ Í∂åÌïúÏùÑ ÏóÖÎç∞Ïù¥Ìä∏Ìï©ÎãàÎã§."
    Updateresource:
      method: put
      resourcePath: /api/resource/id/{id}
      description: "Î¶¨ÏÜåÏä§Î•º ÏóÖÎç∞Ïù¥Ìä∏ Ìï©ÎãàÎã§."
    Deleteresource:
      method: delete
      resourcePath: /api/resource/id/{id}
      description: "Î¶¨ÏÜåÏä§Î•º ÏÇ≠Ï†úÌï©ÎãàÎã§."
    Getmenuresources:
      method: post
      # method: get
      # resourcePath: /api/resource/menus
      resourcePath: /api/menus/list
      description: "Î©îÎâ¥ Î¶¨ÏÜåÏä§Î•º Í≤ÄÏÉâÌï©ÎãàÎã§."
    Getallpermissions:
      method: get
      resourcePath: /api/ticket
      description: "ÏÇ¨Ïö©ÏûêÎäî uma_protection Role ÏùÑ Í∞ÄÏ†∏Ïïº ÌïúÎã§."
    Getpermissionticket:
      method: post
      resourcePath: /api/ticket
      description: "ÏÇ¨Ïö©ÏûêÎäî uma_protection Role ÏùÑ Í∞ÄÏ†∏Ïïº ÌïúÎã§."
    getProjectsByWorkspaceId:
      method: get
      resourcePath: /api/workspaces/id/{workspaceId}/projects/list
      description: "workspace - projects mapping workspace Í∏∞Ï§Ä Î™©Î°ù Ï°∞Ìöå"
    listUserWorkspaces:
      method: post
      resourcePath: /api/users/workspaces/list
      description: "workspace - user - role mapping Î™©Î°ù user Í∏∞Ï§Ä Ï°∞Ìöå"
    Deleteworkspaceuserrolemapping:
      method: delete
      resourcePath: /api/wsuserrole/workspace/id/{workspaceId}/user/id/{userId}
      description: "workspace - user - role mapping Î™©Î°ù workspace ÏôÄ user Î°ú mapping ÏÇ≠Ï†ú"
    Loginrefresh:
      method: post
      resourcePath: /api/auth/refresh
      description: "refresh_tokenÍ≥º Í∏∞Ï°¥ JWTÎ•º Î∞õÏïÑ, ÏÉàÎ°úÏö¥ JWT ÌÜ†ÌÅ∞ Î∞úÍ∏â"
    Getuserinfo:
      method: get
      resourcePath: /api/auth/userinfo
      description: "Ïú†Ï†Ä Ï†ïÎ≥¥ Ï°∞Ìöå"
    Updateuseinfonotuse:
      method: put
      resourcePath: /api/auth/userinfo
      description: "Ïú†Ï†Ä Ï†ïÎ≥¥ Ï°∞Ìöå"
    Createapiresourcesbyapiyaml:
      method: post
      resourcePath: /api/resource/file/framework/{framework}
      description: "mc-admin-cli ÏóêÏÑú ÏÉùÏÑ±Ìïú api yamlÏùÑ Î∞îÌÉïÏúºÎ°ú Î™®Îì† Î¶¨ÏÜåÏä§Î•º Îì±Î°ùÌï©ÎãàÎã§.  \nÎ¶¨ÏÜåÏä§Í∞Ä Ï§ëÎ≥µÎê†Ïãú Ïò§Î•òÎ•º Î∞òÌôòÌïòÍ≥† ÏóÖÎç∞Ïù¥Ìä∏ ÌïòÏßÄ ÏïäÏäµÎãàÎã§."
    Resetresource:
      method: delete
      resourcePath: /api/resource/reset
      description: "Î™®Îì† Î¶¨ÏÜåÏä§Î•º ÏÇ≠Ï†úÌï©ÎãàÎã§."
    Syncprojectlistwithmcinfra:
      method: get
      resourcePath: /api/tool/mcinfra/sync
      description: "Ïó∞Í≤∞Îêú TB(mcinframanager)Ïùò NS Î¶¨Ïä§Ìä∏Î•º Project List Î°ú Îì±Î°ù.  \n  \nÍ∏∞Ï°¥ Îì±Î°ùÎêú project ÏôÄ Ï§ëÎ≥µÏù¥ Î∞úÏÉùÌïòÎ©¥ Ïò§Î•ò Î∞úÏÉù. ÏÉàÎ°úÏö¥ ÌôòÍ≤ΩÏóêÏÑú Ï≤´ Ìöå Ïã§ÌñâÌïòÎäî Í≤ÉÏùÑ Ï∂îÏ≤ú."
    Getdependentpermissionsbypolicyid:
      method: get
      resourcePath: /api/permission/policyid/{policyid}
      description: "Í∂åÌïúÏùÑ Í≤ÄÏÉâÌï©ÎãàÎã§."
    Searchprojectsbyname:
      method: get
      resourcePath: /api/prj/project/{projectName}
      description: "project Î™©Î°ù Í≤ÄÏÉâ"
    Resetmenuresource:
      method: delete
      resourcePath: /api/resource/reset/menu
      description: "Î™®Îì† Î©îÎâ¥ Î¶¨ÏÜåÏä§Î•º ÏÇ≠Ï†úÌï©ÎãàÎã§."
    Deleterolebyid:
      method: delete
      resourcePath: /api/roles/id/{roleId}
      description: "role ÏÇ≠Ï†ú"
    Getrolebyid:
      method: get
      resourcePath: /api/role/id/{roleId}
      description: "role Îã®Í±¥ Ï°∞Ìöå"
    Updaterolebyid:
      method: put
      resourcePath: /api/role/id/{roleId}
      description: "role ÏàòÏ†ï"
    Getrolebypolicyidnotuse:
      method: get
      resourcePath: /api/role/policyid/{policyid}
      description: "role Îã®Í±¥ Ï°∞Ìöå"
    Createmenuresourcesbymenuyaml:
      method: post
      resourcePath: /api/resource/file/framework/{framework}/menu
      description: "mc-web-console Îì± menu yamlÏùÑ ÏÇ¨Ïö©Ìï¥ÏÑú Î©îÎâ¥ Î¶¨ÏÜåÏä§Î•º Îì±Î°ùÌï©ÎãàÎã§."
    Listusers:
      method: post
      resourcepath: /api/users/list
      description: "ÏÇ¨Ïö©Ïûê Î™©Î°ù Ï°∞Ìöå"
    getUserByID:
      method: get
      resourcePath: /api/users/id/{userId}
      description: "ÏÇ¨Ïö©Ïûê Îã®Í±¥ Ï°∞Ìöå by id"
    Getuserbyname:
      method: get
      resourcePath: /api/users/name/{username}
      description: "ÏÇ¨Ïö©Ïûê Îã®Í±¥ Ï°∞Ìöå by name"
    Getuserworkspacesbyuserid:
      method: get
      resourcePath: /api/users/id/{userId}/workspaces/list
      description: "ÌäπÏ†ï ÏÇ¨Ïö©ÏûêÏùò ÏõåÌÅ¨Ïä§ÌéòÏù¥Ïä§ Î™©Î°ùÏ°∞Ìöå"
    Createuser:
      method: post
      resourcePath: /api/user
      description: "Ïú†Ï†ÄÎ•º Îì±Î°ùÌï©ÎãàÎã§."
    Deactiveuser:
      method: post
      resourcePath: /api/user/deactive
      description: "Í∂åÌïú ÏûàÎäî ÏÇ¨Ïö©ÏûêÍ∞Ä Ìï¥Îãπ Ïú†Ï†ÄÎ•º ÎπÑÌôúÏÑ±ÌôîÌï©ÎãàÎã§."
    removeWorkspaceFromProject:
      method: delete
      resourcePath: /api/projects/unassign/workspaces
      description: "WorkspaceÏóêÏÑú Project Ìï†Îãπ Ìï¥Ï†ú"
    assignPlatformRole:
      method: post
      resourcePath: /api/roles/assign/platform-role
      description: "Platform Role Ìï†Îãπ"

  mc-infra-manager:
    Lookupspeclist:
      method: post
      resourcePath: /lookupSpecs
      description: "Lookup spec list"
    Getlatencybenchmark:
      method: get
      resourcePath: /ns/{nsId}/benchmarkLatency/mci/{mciId}
      description: "Run MCI benchmark for network latency"
    Getallsecuritygroup:
      method: get
      resourcePath: /ns/{nsId}/resources/securityGroup
      description: "List all Security Groups or Security Groups' ID"
    Postsecuritygroup:
      method: post
      resourcePath: /ns/{nsId}/resources/securityGroup
      description: "Create Security Group"
    Delallsecuritygroup:
      method: delete
      resourcePath: /ns/{nsId}/resources/securityGroup
      description: "Delete all Security Groups"
    Postconfig:
      method: post
      resourcePath: /config
      description: "Create or Update config (TB_SPIDER_REST_URL, TB_DRAGONFLY_REST_URL, ...)"
    Initallconfig:
      method: delete
      resourcePath: /config
      description: "Init all configs"
    Getallconfig:
      method: get
      resourcePath: /config
      description: "List all configs"
    Inspectresources:
      method: post
      resourcePath: /inspectResources
      description: "Inspect Resources (vNet, securityGroup, sshKey, vm) registered in CB-Tumblebug, CB-Spider, CSP"
    Postk8sclusterdynamiccheckrequest:
      method: post
      resourcePath: /k8sClusterDynamicCheckRequest
      description: "Check available ConnectionConfig list before create K8sCluster Dynamically from common spec and image"
    Deldatadisk:
      method: delete
      resourcePath: /ns/{nsId}/resources/dataDisk/{dataDiskId}
      description: "Delete Data Disk"
    Getdatadisk:
      method: get
      resourcePath: /ns/{nsId}/resources/dataDisk/{dataDiskId}
      description: "Get Data Disk"
    Putdatadisk:
      method: put
      resourcePath: /ns/{nsId}/resources/dataDisk/{dataDiskId}
      description: "Upsize Data Disk"
    Putsshkey:
      method: put
      resourcePath: /ns/{nsId}/resources/sshKey/{sshKeyId}
      description: "Update SSH Key"
    Delsshkey:
      method: delete
      resourcePath: /ns/{nsId}/resources/sshKey/{sshKeyId}
      description: "Delete SSH Key"
    Getsshkey:
      method: get
      resourcePath: /ns/{nsId}/resources/sshKey/{sshKeyId}
      description: "Get SSH Key"
    Getns:
      method: get
      resourcePath: /ns/{nsId}
      description: "Get namespace"
    Putns:
      method: put
      resourcePath: /ns/{nsId}
      description: "Update namespace"
    Delns:
      method: delete
      resourcePath: /ns/{nsId}
      description: "Delete namespace"
    Checkresource:
      method: get
      resourcePath: /ns/{nsId}/checkResource/{resourceType}/{resourceId}
      description: "Check resources' existence"
    Getallnlb:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb
      description: "List all NLBs or NLBs' ID"
    Postnlb:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb
      description: "Create NLB"
    Delallnlb:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb
      description: "Delete all NLBs"
    Registercspnativeresources:
      method: post
      resourcePath: /registerCspResources
      description: "Register CSP Native Resources (vNet, securityGroup, sshKey, vm) to CB-Tumblebug"
    Getcontrolmci:
      method: get
      resourcePath: /ns/{nsId}/control/mci/{mciId}
      description: "Control the lifecycle of MCI (refine, suspend, resume, reboot, terminate)"
    Getmonitordata:
      method: get
      resourcePath: /ns/{nsId}/monitoring/mci/{mciId}/metric/{metric}
      description: "Get monitoring data of specified MCI for specified monitoring metric (cpu, memory, disk, network)"
    Postobjectstorage:
      method: post
      resourcePath: /ns/{nsId}/resources/objectStorage
      description: "Create a Object Storages\n\nSupported CSPs: AWS, Azure\n- Note - `connectionName` example: aws-ap-northeast-2, azure-koreacentral\n\n- Note - Please check the `requiredCSPResource` property which includes CSP specific values.\n\n- Note - You can find the API usage examples on this link, https://github.com/cloud-barista/mc-terrarium/discussions/117\n"
    Getallobjectstorage:
      method: get
      resourcePath: /ns/{nsId}/resources/objectStorage
      description: "Get all Object Storages (TBD)"
    Postutiltovalidatenetwork:
      method: post
      resourcePath: /util/net/validate
      description: "Validate a hierarchical configuration of a VPC network or multi-cloud network consisting of multiple VPC networks"
    Getavailablek8snodeimage:
      method: get
      resourcePath: /availableK8sNodeImage
      description: "(UNDER DEVELOPMENT!!!) Get available kubernetes cluster node image"
    Getk8sclusterinfo:
      method: get
      resourcePath: /k8sClusterInfo
      description: "Get kubernetes cluster information"
    Loadassets:
      method: get
      resourcePath: /loadAssets
      description: "Load Common Resources from internal asset files (Spec, Image)"
    Getcontrolmcivm:
      method: get
      resourcePath: /ns/{nsId}/control/mci/{mciId}/vm/{vmId}
      description: "Control the lifecycle of VM (suspend, resume, reboot, terminate)"
    Delallvnet:
      method: delete
      resourcePath: /ns/{nsId}/resources/vNet
      description: "Delete all VNets"
    Getallvnet:
      method: get
      resourcePath: /ns/{nsId}/resources/vNet
      description: "List all VNets or VNets' ID"
    Postvnet:
      method: post
      resourcePath: /ns/{nsId}/resources/vNet
      description: "Create a new VNet"
    Postmcivmsnapshot:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}/snapshot
      description: "Snapshot VM and create a Custom Image Object using the Snapshot"
    Getregion:
      method: get
      resourcePath: /provider/{providerName}/region/{regionName}
      description: "Get registered region info"
    Postmcidynamiccheckrequest:
      method: post
      resourcePath: /mciDynamicCheckRequest
      description: "Check available ConnectionConfig list before create MCI Dynamically from common spec and image"
    Postfiletomci:
      method: post
      resourcePath: /ns/{nsId}/transferFile/mci/{mciId}
      description: "Transfer a file to specified MCI to the specified path.\nThe file size should be less than 10MB.\nNot for gerneral file transfer but for specific purpose (small configuration files)."
    Getbenchmark:
      method: post
      resourcePath: /ns/{nsId}/benchmark/mci/{mciId}
      description: "Run MCI benchmark for a single performance metric and return results"
    Getnlb:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb/{nlbId}
      description: "Get NLB"
    Delnlb:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb/{nlbId}
      description: "Delete NLB"
    Postregistersubnet:
      method: post
      resourcePath: /ns/{nsId}/registerCspResource/vNet/{vNetId}/subnet
      description: "Register Subnet, which was created in CSP"
    Fetchimages:
      method: post
      resourcePath: /ns/{nsId}/resources/fetchImages
      description: "Fetch images"
    Getobjectstorage:
      method: get
      resourcePath: /ns/{nsId}/resources/objectStorage/{objectStorageId}
      description: "Get resource info of a Object Storage"
    Deleteobjectstorage:
      method: delete
      resourcePath: /ns/{nsId}/resources/objectStorage/{objectStorageId}
      description: "Delete a Object Storage"
    Removelabel:
      method: delete
      resourcePath: /label/{labelType}/{uid}/{key}
      description: "Remove a label from a resource identified by its uid"
    Getbastionnodes:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{targetVmId}/bastion
      description: "Get bastion nodes for a VM"
    Getspec:
      method: get
      resourcePath: /ns/{nsId}/resources/spec/{specId}
      description: "Get spec"
    Putspec:
      method: put
      resourcePath: /ns/{nsId}/resources/spec/{specId}
      description: "Update spec"
    Delspec:
      method: delete
      resourcePath: /ns/{nsId}/resources/spec/{specId}
      description: "Delete spec"
    Getsqldb:
      method: get
      resourcePath: /ns/{nsId}/resources/sqlDb/{sqlDbId}
      description: "Get resource info of a SQL datatbase"
    Deletesqldb:
      method: delete
      resourcePath: /ns/{nsId}/resources/sqlDb/{sqlDbId}
      description: "Delete a SQL datatbase"
    Getvnet:
      method: get
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}
      description: "Get VNet"
    Delvnet:
      method: delete
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}
      description: "Delete VNet\n- withsubnets: delete VNet and its subnets\n- refine: delete information of VNet and its subnets if there's no info/resource in Spider/CSP\n- force: delete VNet and its subnets regardless of the status of info/resource in Spider/CSP"
    Testjwtauth:
      method: get
      resourcePath: /auth/test
      description: "Test JWT authentication"
    Getpublickeyforcredentialencryption:
      method: get
      resourcePath: /credential/publicKey
      description: "Generates an RSA key pair using a 4096-bit key size with the RSA algorithm. The public key is generated using the RSA algorithm with OAEP padding and SHA-256 as the hash function. This key is used to encrypt an AES key that will be used for hybrid encryption of credentials."
    Recommendk8snode:
      method: post
      resourcePath: /k8sClusterRecommendNode
      description: "Recommend K8sCluster's Node plan (filter and priority) Find details from https://github.com/cloud-barista/cb-tumblebug/discussions/1234"
    Postmcivm:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/vm
      description: "Create and add homogeneous VMs(subGroup) to a specified MCI (Set subGroupSize for multiple VMs)"
    Postspec:
      method: post
      resourcePath: /ns/{nsId}/resources/spec
      description: "Register spec"
    Delallsharedresources:
      method: delete
      resourcePath: /ns/{nsId}/sharedResources
      description: "Delete all Default Resource Objects in the given namespace"
    Getrequiredk8ssubnetcount:
      method: get
      resourcePath: /requiredK8sSubnetCount
      description: "Get the required subnet count to create a K8sCluster"
    Checkk8snodegroupsonk8screation:
      method: get
      resourcePath: /checkK8sNodeGroupsOnK8sCreation
      description: "Check whether nodegroups are required during the K8sCluster creation"
    Getmcigroupids:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/subgroup
      description: "List SubGroup IDs in a specified MCI"
    Putvmdatadisk:
      method: put
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}/dataDisk
      description: "Attach/Detach available dataDisk"
    Postvmdatadisk:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}/dataDisk
      description: "Provisioning (Create and attach) dataDisk"
    Getvmdatadisk:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}/dataDisk
      description: "Get available dataDisks for a VM"
    Getsitetositevpn:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/vpn/{vpnId}
      description: "Get resource info of a site-to-site VPN (Currently, GCP-AWS is supported)"
    Putsitetositevpn:
      method: put
      resourcePath: /ns/{nsId}/mci/{mciId}/vpn/{vpnId}
      description: "(To be provided) Update a site-to-site VPN"
    Deletesitetositevpn:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}/vpn/{vpnId}
      description: "Delete a site-to-site VPN (Currently, GCP-AWS is supported)"
    Getcustomimage:
      method: get
      resourcePath: /ns/{nsId}/resources/customImage/{customImageId}
      description: "Get customImage"
    Delcustomimage:
      method: delete
      resourcePath: /ns/{nsId}/resources/customImage/{customImageId}
      description: "Delete customImage"
    Getallrequests:
      method: get
      resourcePath: /requests
      description: "Get details of all requests with optional filters."
    Deleteallrequests:
      method: delete
      resourcePath: /requests
      description: "Delete details of all requests"
    Getcloudinfo:
      method: get
      resourcePath: /cloudInfo
      description: "Get cloud information"
    Getconnconfiglist:
      method: get
      resourcePath: /connConfig
      description: "List all registered ConnConfig"
    Deletederegistervnet:
      method: delete
      resourcePath: /ns/{nsId}/deregisterCspResource/vNet/{vNetId}
      description: "Deregister the VNet, which was created in CSP"
    Putsetk8snodegroupautoscaling:
      method: put
      resourcePath: /ns/{nsId}/k8sCluster/{k8sClusterId}/k8sNodeGroup/{k8sNodeGroupName}/onAutoscaling
      description: "Set a K8sNodeGroup's Autoscaling On/Off"
    Getallcustomimage:
      method: get
      resourcePath: /ns/{nsId}/resources/customImage
      description: "List all customImages or customImages' ID"
    Postcustomimage:
      method: post
      resourcePath: /ns/{nsId}/resources/customImage
      description: "Register existing Custom Image in a CSP (option=register)"
    Delallcustomimage:
      method: delete
      resourcePath: /ns/{nsId}/resources/customImage
      description: "Delete all customImages"
    Filterspecsbyrange:
      method: post
      resourcePath: /ns/{nsId}/resources/filterSpecsByRange
      description: "Filter specs by range"
    Postsystemmci:
      method: post
      resourcePath: /systemMci
      description: "Create System MCI Dynamically for Special Purpose"
    Lookupspec:
      method: post
      resourcePath: /lookupSpec
      description: "Lookup spec"
    Postk8snodegroup:
      method: post
      resourcePath: /ns/{nsId}/k8sCluster/{k8sClusterId}/k8sNodeGroup
      description: "Add a K8sNodeGroup"
    Getnlbhealth:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb/{nlbId}/healthz
      description: "Get NLB Health"
    Postmcisubgroupscaleout:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/subgroup/{subgroupId}
      description: "ScaleOut subGroup in specified MCI"
    Getmcigroupvms:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/subgroup/{subgroupId}
      description: "List VMs with a SubGroup label in a specified MCI"
    Deletederegistersubnet:
      method: delete
      resourcePath: /ns/{nsId}/deregisterCspResource/vNet/{vNetId}/subnet/{subnetId}
      description: "Deregister Subnet, which was created in CSP"
    Putchangek8snodegroupautoscalesize:
      method: put
      resourcePath: /ns/{nsId}/k8sCluster/{k8sClusterId}/k8sNodeGroup/{k8sNodeGroupName}/autoscaleSize
      description: "Change a K8sNodeGroup's Autoscale Size"
    Getallmcipolicy:
      method: get
      resourcePath: /ns/{nsId}/policy/mci
      description: "List all MCI policies"
    Delallmcipolicy:
      method: delete
      resourcePath: /ns/{nsId}/policy/mci
      description: "Delete all MCI policies"
    Postimage:
      method: post
      resourcePath: /ns/{nsId}/resources/image
      description: "Register image"
    Delallimage:
      method: delete
      resourcePath: /ns/{nsId}/resources/image
      description: "Delete all images"
    Getallimage:
      method: get
      resourcePath: /ns/{nsId}/resources/image
      description: "List all images or images' ID"
    Postsubnet:
      method: post
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}/subnet
      description: "Create Subnet"
    Getallsubnet:
      method: get
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}/subnet
      description: "List all subnets"
    Putupgradek8scluster:
      method: put
      resourcePath: /ns/{nsId}/k8sCluster/{k8sClusterId}/upgrade
      description: "Upgrade a K8sCluster's version"
    Getmcivm:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}
      description: "Get VM in specified MCI"
    Delmcivm:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}
      description: "Delete VM in specified MCI"
    Postinstallmonitoragenttomci:
      method: post
      resourcePath: /ns/{nsId}/monitoring/install/mci/{mciId}
      description: "Install monitoring agent (CB-Dragonfly agent) to MCI"
    Getobject:
      method: get
      resourcePath: /object
      description: "Get value of an object"
    Deleteobject:
      method: delete
      resourcePath: /object
      description: "Delete an object"
    Getavailablek8sclusterversion:
      method: get
      resourcePath: /availableK8sVersion
      description: "Get available kubernetes cluster version"
    Lookupimage:
      method: post
      resourcePath: /lookupImage
      description: "Lookup image"
    Postregistervnet:
      method: post
      resourcePath: /ns/{nsId}/registerCspResource/vNet
      description: "Register the VNet, which was created in CSP"
    Getallsshkey:
      method: get
      resourcePath: /ns/{nsId}/resources/sshKey
      description: "List all SSH Keys or SSH Keys' ID"
    Postsshkey:
      method: post
      resourcePath: /ns/{nsId}/resources/sshKey
      description: "Create SSH Key"
    Delallsshkey:
      method: delete
      resourcePath: /ns/{nsId}/resources/sshKey
      description: "Delete all SSH Keys"
    Getproviderlist:
      method: get
      resourcePath: /provider
      description: "List all registered Providers"
    Checkk8snodeimagedesignation:
      method: get
      resourcePath: /checkK8sNodeImageDesignation
      description: "Check whether node image designation is possible to create a K8sCluster"
    Getconfig:
      method: get
      resourcePath: /config/{configId}
      description: "Get config"
    Initconfig:
      method: delete
      resourcePath: /config/{configId}
      description: "Init config"
    Registercredential:
      method: post
      resourcePath: /credential
      description: "This API registers credential information using hybrid encryption. The process involves compressing and encrypting sensitive data with AES-256, encrypting the AES key with a 4096-bit RSA public key (retrieved via `GET /credential/publicKey`), and using OAEP padding with SHA-256. All values, including the AES key, must be base64 encoded before sending, and the public key token ID must be included in the request."
    Getcontrolk8scluster:
      method: get
      resourcePath: /ns/{nsId}/control/k8sCluster/{k8sClusterId}
      description: "Control the creation of K8sCluster (continue, withdraw)"
    Postmcivmdynamic:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/vmDynamic
      description: "Create VM Dynamically and add it to MCI"
    Postutiltodesignnetwork:
      method: post
      resourcePath: /util/net/design
      description: "Design a hierarchical network configuration of a VPC network or multi-cloud network consisting of multiple VPC networks"
    Retrieveregionlistfromcsp:
      method: get
      resourcePath: /regionFromCsp
      description: "RetrieveR all region lists from CSPs"
    Postteststreamresponse:
      method: post
      resourcePath: /testStreamResponse
      description: "Receives a number and streams the decrementing number every second until zero"
    Removebastionnodes:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}/bastion/{bastionVmId}
      description: "Remove a bastion VM from all vNets"
    Addnlbvms:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb/{nlbId}/vm
      description: "Add VMs to NLB"
    Removenlbvms:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb/{nlbId}/vm
      description: "Delete VMs from NLB"
    Getallsitetositevpn:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/vpn
      description: "Get all site-to-site VPNs"
    Postsitetositevpn:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/vpn
      description: "Create a site-to-site VPN\n\nThe supported CSP sets are as follows:\n\n- GCP and AWS (Note: It will take about `15 minutes`.)\n\n- GCP and Azure (Note: It will take about `30 minutes`.)"
    Delfirewallrules:
      method: delete
      resourcePath: /ns/{nsId}/resources/securityGroup/{securityGroupId}/rules
      description: "Delete FirewallRules"
    Postfirewallrules:
      method: post
      resourcePath: /ns/{nsId}/resources/securityGroup/{securityGroupId}/rules
      description: "Create FirewallRules"
    Getobjects:
      method: get
      resourcePath: /objects
      description: "List all objects for a given key"
    Deleteobjects:
      method: delete
      resourcePath: /objects
      description: "Delete child objects along with the given object"
    Getallbenchmark:
      method: post
      resourcePath: /ns/{nsId}/benchmarkAll/mci/{mciId}
      description: "Run MCI benchmark for all performance metrics and return results"
    Postmci:
      method: post
      resourcePath: /ns/{nsId}/mci
      description: "Create MCI"
    Delallmci:
      method: delete
      resourcePath: /ns/{nsId}/mci
      description: "Delete all MCIs"
    GetAllMci:
      method: get
      resourcePath: /ns/{nsId}/mci
      description: "List all MCIs or MCIs' ID"
    Postregistercspnativevm:
      method: post
      resourcePath: /ns/{nsId}/registerCspVm
      description: "Register existing VM in a CSP to Cloud-Barista MCI"
    Getallsqldb:
      method: get
      resourcePath: /ns/{nsId}/resources/sqlDb
      description: "Get all SQL Databases (TBD)"
    Postsqldb:
      method: post
      resourcePath: /ns/{nsId}/resources/sqlDb
      description: "Create a SQL Databases\n\nSupported CSPs: AWS, Azure, GCP, NCP\n- Note - `connectionName` example: aws-ap-northeast-2, azure-koreacentral, gcp-asia-northeast3, ncpvpc-kr\n\n- Note - Please check the `requiredCSPResource` property which includes CSP specific values.\n\n- Note - You can find the API usage examples on this link, https://github.com/cloud-barista/mc-terrarium/discussions/110\n"
    Postk8sclusterdynamic:
      method: post
      resourcePath: /ns/{nsId}/k8sClusterDynamic
      description: "Create K8sCluster Dynamically from common spec and image"
    Putmonitoragentstatusinstalled:
      method: put
      resourcePath: /ns/{nsId}/monitoring/status/mci/{mciId}/vm/{vmId}
      description: "Set monitoring agent (CB-Dragonfly agent) installation status installed (for Windows VM only)"
    Postinstallbenchmarkagenttomci:
      method: post
      resourcePath: /ns/{nsId}/installBenchmarkAgent/mci/{mciId}
      description: "Install the benchmark agent to specified MCI"
    Getk8scluster:
      method: get
      resourcePath: /ns/{nsId}/k8sCluster/{k8sClusterId}
      description: "Get K8sCluster"
    Deletek8scluster:
      method: delete
      resourcePath: /ns/{nsId}/k8sCluster/{k8sClusterId}
      description: "Delete K8sCluster"
    Getimage:
      method: get
      resourcePath: /ns/{nsId}/resources/image/{imageId}
      description: "GetImage returns an image object if there are matched images for the given namespace and imageKey(Id, CspResourceName, GuestOS,...)"
    Putimage:
      method: put
      resourcePath: /ns/{nsId}/resources/image/{imageId}
      description: "Update image"
    Delimage:
      method: delete
      resourcePath: /ns/{nsId}/resources/image/{imageId}
      description: "Delete image"
    Getsubnet:
      method: get
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}/subnet/{subnetId}
      description: "Get Subnet"
    Delsubnet:
      method: delete
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}/subnet/{subnetId}
      description: "Delete Subnet\n- refine: delete a subnet `object` if there's no resource on CSP or no inforamation on Spider\n- force: force: delete a subnet `resource` on a CSP regardless of the current resource status (e.g., attempt to delete even if in use)"
    Getregions:
      method: get
      resourcePath: /provider/{providerName}/region
      description: "Get registered region info"
    Postcmdmci:
      method: post
      resourcePath: /ns/{nsId}/cmd/mci/{mciId}
      description: "Send a command to specified MCI"
    Fetchspecs:
      method: post
      resourcePath: /ns/{nsId}/resources/fetchSpecs
      description: "Fetch specs"
    Searchimage:
      method: post
      resourcePath: /ns/{nsId}/resources/searchImage
      description: "Search image"
    Getresourcesbylabelselector:
      method: get
      resourcePath: /resources/{labelType}
      description: "Get resources based on a label selector. The label selector supports the following operators:\n- `=` : Selects resources where the label key equals the specified value (e.g., `env=production`).\n- `!=` : Selects resources where the label key does not equal the specified value (e.g., `tier!=frontend`).\n- `in` : Selects resources where the label key is in the specified set of values (e.g., `region in (us-west, us-east)`).\n- `notin` : Selects resources where the label key is not in the specified set of values (e.g., `env notin (production, staging)`).\n- `exists` : Selects resources where the label key exists (e.g., `env exists`).\n- `!exists` : Selects resources where the label key does not exist (e.g., `env !exists`)."
    Getlabels:
      method: get
      resourcePath: /label/{labelType}/{uid}
      description: "Get labels for a resource identified by its uid"
    Createorupdatelabel:
      method: put
      resourcePath: /label/{labelType}/{uid}
      description: "Create or update a label for a resource identified by its uid"
    Lookupimagelist:
      method: post
      resourcePath: /lookupImages
      description: "Lookup image list"
    RecommendSpec:
      method: post
      resourcePath: /recommendSpec
      description: "Recommend MCI plan (filter and priority) Find details from https://github.com/cloud-barista/cb-tumblebug/discussions/1234"
    Getallns:
      method: get
      resourcePath: /ns
      description: "List all namespaces or namespaces' ID"
    Postns:
      method: post
      resourcePath: /ns
      description: "Create namespace"
    Delallns:
      method: delete
      resourcePath: /ns
      description: "Delete all namespaces"
    Forwardanyreqtoany:
      method: post
      resourcePath: /forward/{path}
      description: "Forward any (GET) request to CB-Spider"
    Checkhttpversion:
      method: get
      resourcePath: /httpVersion
      description: "Checks and logs the HTTP version of the incoming request to the server console."
    Postk8scluster:
      method: post
      resourcePath: /ns/{nsId}/k8sCluster
      description: "Create K8sCluster<br>Find details from https://github.com/cloud-barista/cb-tumblebug/discussions/1614"
    Deleteallk8scluster:
      method: delete
      resourcePath: /ns/{nsId}/k8sCluster
      description: "Delete all K8sClusters"
    Getallk8scluster:
      method: get
      resourcePath: /ns/{nsId}/k8sCluster
      description: "List all K8sClusters or K8sClusters' ID"
    Postk8snodegroupdynamic:
      method: post
      resourcePath: /ns/{nsId}/k8sCluster/{k8sClusterId}/k8sNodeGroupDynamic
      description: "Create K8sNodeGroup Dynamically from common spec and image"
    Getrequest:
      method: get
      resourcePath: /request/{reqId}
      description: "Get details of a specific request"
    Deleterequest:
      method: delete
      resourcePath: /request/{reqId}
      description: "Delete details of a specific request"
    Getconnconfig:
      method: get
      resourcePath: /connConfig/{connConfigName}
      description: "Get registered ConnConfig info"
    Getsystemlabelinfo:
      method: get
      resourcePath: /labelInfo
      description: "Return LabelTypes and system defined label keys with example"
    Postmcnlb:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/mcSwNlb
      description: "Create a special purpose MCI for NLB and depoly and setting SW NLB"
    Getmcipolicy:
      method: get
      resourcePath: /ns/{nsId}/policy/mci/{mciId}
      description: "Get MCI Policy"
    Postmcipolicy:
      method: post
      resourcePath: /ns/{nsId}/policy/mci/{mciId}
      description: "Create MCI Automation policy"
    Delmcipolicy:
      method: delete
      resourcePath: /ns/{nsId}/policy/mci/{mciId}
      description: "Delete MCI Policy"
    Postutiltodesignvnet:
      method: post
      resourcePath: /util/vNet/design
      description: "Design VNet and subnets based on user-friendly properties"
    Registercspnativeresourcesall:
      method: post
      resourcePath: /registerCspResourcesAll
      description: "Register CSP Native Resources (vNet, securityGroup, sshKey, vm) from all Clouds to CB-Tumblebug"
    Delmci:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}
      description: "Delete MCI"
    Getmci:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}
      description: "Get MCI object (option: status, accessInfo, vmId)"
    Getrequeststatusofsitetositevpn:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/vpn/{vpnId}/request/{requestId}
      description: "Check the status of a specific request by its ID"
    Getreadyz:
      method: get
      resourcePath: /readyz
      description: "Check Tumblebug is ready"
    Setbastionnodes:
      method: put
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{targetVmId}/bastion/{bastionVmId}
      description: "Set bastion nodes for a VM"
    Postmcidynamic:
      method: post
      resourcePath: /ns/{nsId}/mciDynamic
      description: "Create MCI Dynamically from common spec and image"
    Inspectresourcesoverview:
      method: get
      resourcePath: /inspectResourcesOverview
      description: "Inspect Resources Overview (vNet, securityGroup, sshKey, vm) registered in CB-Tumblebug and CSP for all connections"
    Getsecuritygroup:
      method: get
      resourcePath: /ns/{nsId}/resources/securityGroup/{securityGroupId}
      description: "Get Security Group"
    Delsecuritygroup:
      method: delete
      resourcePath: /ns/{nsId}/resources/securityGroup/{securityGroupId}
      description: "Delete Security Group"
    Deletek8snodegroup:
      method: delete
      resourcePath: /ns/{nsId}/k8sCluster/{k8sClusterId}/k8sNodeGroup/{k8sNodeGroupName}
      description: "Remove a K8sNodeGroup"
    Getsitesinmci:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/site
      description: "Get sites in MCI"
    Getalldatadisk:
      method: get
      resourcePath: /ns/{nsId}/resources/dataDisk
      description: "List all Data Disks or Data Disks' ID"
    Postdatadisk:
      method: post
      resourcePath: /ns/{nsId}/resources/dataDisk
      description: "Create Data Disk"
    Delalldatadisk:
      method: delete
      resourcePath: /ns/{nsId}/resources/dataDisk
      description: "Delete all Data Disks"
    Createsharedresource:
      method: post
      resourcePath: /ns/{nsId}/sharedResource
      description: "Create shared resources for MC-Infra"

  mc-web-console:
    Anycontroller:
      method: post
      resourcePath: /api/{operationId}
      description: AnyController
    Availabledisktypebyproviderregion:
      method: post
      resourcePath: /api/availabledisktypebyproviderregion
      description: AvailableDiskTypeByProviderRegion
    Createmenuresources:
      method: post
      resourcePath: /api/createmenuresources
      description: CreateMenuResources
    Disklookup:
      method: post
      resourcePath: /api/disklookup
      description: DiskLookup
    Getmenutree:
      method: post
      resourcePath: /api/getmenutree
      description: GetmenuTree
    Webgetuserinfo:
      method: post
      resourcePath: /api/auth/userinfo
      description: webGetUserInfo
    Weblogin:
      method: post
      resourcePath: /api/auth/login
      description: webLogin
    Webloginrefresh:
      method: post
      resourcePath: /api/auth/refresh
      description: webLoginRefresh
    Weblogout:
      method: post
      resourcePath: /api/auth/logout
      description: webLogout
    Webvalidate:
      method: post
      resourcePath: /api/auth/validate
      description: webValidate
    Postclusterremotecmd:
      method: post
      resourcePath: /ns/{nsId}/cmd/k8sCluster/{k8sClusterId}
      description: "Send a command to specified Cluster"
    Postmcidynamicreview:
      method: post
      resourcePath: /ns/{nsId}/mciDynamicReview
      description: "Create MCI Dynamically from common spec and image"

  mc-observability:
    LogLabelsQuery:
      method: get
      resourcePath: /api/o11y/log/labels
      description: "Retrieve the list of label keys provided by Loki."
    LogVolumeQuery:
      method: get
      resourcePath: /api/o11y/log/log_volumes
      description: "Retrieve log volumes (metric time series data) for the given period."
    LogRangeQuery:
      method: get
      resourcePath: /api/o11y/log/query_range
      description: "Retrieve log data for a specific query within a given time range."
    GetAllInfluxDB:
      method: get
      resourcePath: /api/o11y/monitoring/influxdb
      description: "Retrieve all InfluxDB servers"
    GetPlugins:
      method: get
      resourcePath: /api/o11y/monitoring/plugins
      description: "Retrieve plugin list"
    GetAllVMs:
      method: get
      resourcePath: /api/o11y/monitoring/vm
      description: "Retrieve all targets"
    GetPaginatedTriggerHistories:
      method: get
      resourcePath: /api/o11y/trigger/history
      description: "Get paginated trigger histories"
    GetPaginatedTriggerPolicies:
      method: get
      resourcePath: /api/o11y/trigger/policy
      description: "Get paginated trigger policies"
    CreateTriggerPolicy:
      method: post
      resourcePath: /api/o11y/trigger/policy
      description: "Create trigger policy"
    GetMeasurementFields:
      method: get
      resourcePath: /api/o11y/monitoring/influxdb/measurement
      description: "Retrieve InfluxDB measurements"
    GetMeasurementTags:
      method: get
      resourcePath: /api/o11y/monitoring/influxdb/tag
      description: "Retrieve InfluxDB tags"
    GetAllAlertRules:
      method: get
      resourcePath: /api/o11y/trigger/alert/alert-rules
      description: "Get all alert rules"
    GetAllAlerts:
      method: get
      resourcePath: /api/o11y/trigger/alert/alerts
      description: "Get all alerts"
    GetAllContactPoints:
      method: get
      resourcePath: /api/o11y/trigger/alert/contact-points
      description: "Get all contact points"
    CheckGrafanaHealthStatus:
      method: get
      resourcePath: /api/o11y/trigger/alert/health
      description: "Check grafana health status"
    GetPaginatedAlertTestHistories:
      method: get
      resourcePath: /api/o11y/trigger/alert/test-history
      description: "Get paginated alert test histories"
    GetSupportedNotificationChannels:
      method: get
      resourcePath: /api/o11y/trigger/noti/channel
      description: "Get supported notification channels"
    GetPaginatedNotificationHistories:
      method: get
      resourcePath: /api/o11y/trigger/noti/history
      description: "Get paginated notification histories"
    DeleteTriggerPolicy:
      method: delete
      resourcePath: /api/o11y/trigger/policy/{id}
      description: "Delete trigger policy"
    LabelValueQuery:
      method: get
      resourcePath: /api/o11y/log/labels/{label}/values
      description: "Retrieve the list of values for a specific label key."
    GetVMByNsMci:
      method: get
      resourcePath: /api/o11y/monitoring/{nsId}/{mciId}/vm
      description: "Retrieve target list by NS/MCI"
    TestAlertReceiverConnection:
      method: post
      resourcePath: /api/o11y/trigger/alert/alert-receiver/test
      description: "Test alert receiver connection"
    SearchAlertsByTitle:
      method: get
      resourcePath: /api/o11y/trigger/alert/alerts/search
      description: "Search alerts by title"
    UpdateTriggerHistoryComment:
      method: put
      resourcePath: /api/o11y/trigger/history/{id}/comment
      description: "Update trigger history comment"
    UpdateTriggerPolicyNotificationChannels:
      method: put
      resourcePath: /api/o11y/trigger/policy/{id}/channel
      description: "Update trigger policy notification channels"
    AddTriggerVM:
      method: post
      resourcePath: /api/o11y/trigger/policy/{id}/vm
      description: "Add trigger vm"
    RemoveTriggerVM:
      method: delete
      resourcePath: /api/o11y/trigger/policy/{id}/vm
      description: "Remove trigger vm"
    GetMetricsByVMId:
      method: post
      resourcePath: /api/o11y/monitoring/influxdb/metric/{nsId}/{mciId}/{vmId}
      description: "Retrieve InfluxDB metrics"
    GetMetricsByNsIdAndMciId:
      method: post
      resourcePath: /api/o11y/monitoring/influxdb/metric/{nsId}/{mciId}
      description: "Retrieve InfluxDB metrics"
    GetVM:
      method: get
      resourcePath: /api/o11y/monitoring/{nsId}/{mciId}/vm/{vmId}
      description: "Retrieve single target"
    PostVM:
      method: post
      resourcePath: /api/o11y/monitoring/{nsId}/{mciId}/vm/{vmId}
      description: "Create target (VM)"
    PutVM:
      method: put
      resourcePath: /api/o11y/monitoring/{nsId}/{mciId}/vm/{vmId}
      description: "Update target"
    DeleteVM:
      method: delete
      resourcePath: /api/o11y/monitoring/{nsId}/{mciId}/vm/{vmId}
      description: "Delete target"
    GetMonitoringItems:
      method: get
      resourcePath: /api/o11y/monitoring/{nsId}/{mciId}/vm/{vmId}/item
      description: "Retrieve monitoring item list"
    AddMonitoringItem:
      method: post
      resourcePath: /api/o11y/monitoring/{nsId}/{mciId}/vm/{vmId}/item
      description: "Add monitoring item"
    UpdateMonitoringItem:
      method: put
      resourcePath: /api/o11y/monitoring/{nsId}/{mciId}/vm/{vmId}/item
      description: "Update monitoring item"
    DeleteMonitoringItem:
      method: delete
      resourcePath: /api/o11y/monitoring/{nsId}/{mciId}/vm/{vmId}/item/{itemSeq}
      description: "Delete monitoring item"
    UpdateAnomalySetting:
      method: put
      resourcePath: /api/o11y/insight/anomaly-detection/settings/{settingSeq}
      description: "updateAnomalySetting"
    DeleteAnomalySetting:
      method: delete
      resourcePath: /api/o11y/insight/anomaly-detection/settings/{settingSeq}
      description: "deleteAnomalySetting"
    PredictMonitoringDataForMci:
      method: post
      resourcePath: /api/o11y/insight/predictions/ns/{nsId}/mci/{mciId}
      description: "predictMonitoringDataForMci"
    PredictMonitoringDataForVm:
      method: post
      resourcePath: /api/o11y/insight/predictions/ns/{nsId}/mci/{mciId}/vm/{vmId}
      description: "predictMonitoringDataForVm"
    QueryLogAnalysis:
      method: post
      resourcePath: /api/o11y/insight/log-analysis/query
      description: "queryLogAnalysis"
    GetLLMChatSessions:
      method: get
      resourcePath: /api/o11y/insight/llm/session
      description: "getLLMChatSessions"
    PostLLMChatSession:
      method: post
      resourcePath: /api/o11y/insight/llm/session
      description: "postLLMChatSession"
    DeleteLLMChatSession:
      method: delete
      resourcePath: /api/o11y/insight/llm/session
      description: "deleteLLMChatSession"
    GetLLMApiKeys:
      method: get
      resourcePath: /api/o11y/insight/llm/api-keys
      description: "getLLMApiKeys"
    PostLLMApiKeys:
      method: post
      resourcePath: /api/o11y/insight/llm/api-keys
      description: "postLLMApiKeys"
    PredictAnomalyDetection:
      method: post
      resourcePath: /api/o11y/insight/anomaly-detection/{settingSeq}
      description: "predictAnomalyDetection"
    GetAnomalySettings:
      method: get
      resourcePath: /api/o11y/insight/anomaly-detection/settings
      description: "getAnomalySettings"
    CreateAnomalySetting:
      method: post
      resourcePath: /api/o11y/insight/anomaly-detection/settings
      description: "createAnomalySetting"
    QueryAlertAnalysis:
      method: post
      resourcePath: /api/o11y/insight/alert-analysis/query
      description: "queryAlertAnalysis"
    GetPredictionOptions:
      method: get
      resourcePath: /api/o11y/insight/predictions/options
      description: "getPredictionOptions"
    GetPredictionHistoryForVm:
      method: get
      resourcePath: /api/o11y/insight/predictions/ns/{nsId}/mci/{mciId}/vm/{vmId}/history
      description: "getPredictionHistoryForVm"
    GetPredictionHistoryForMci:
      method: get
      resourcePath: /api/o11y/insight/predictions/ns/{nsId}/mci/{mciId}/history
      description: "getPredictionHistoryForMci"
    GetPredictionMeasurements:
      method: get
      resourcePath: /api/o11y/insight/predictions/measurement
      description: "getPredictionMeasurements"
    GetPredictionSpecificMeasurement:
      method: get
      resourcePath: /api/o11y/insight/predictions/measurement/{measurement}
      description: "getPredictionSpecificMeasurement"
    GetLLMSessionHistory:
      method: get
      resourcePath: /api/o11y/insight/llm/session/{sessionId}/history
      description: "getLLMSessionHistory"
    GetLLMModelOptions:
      method: get
      resourcePath: /api/o11y/insight/llm/model
      description: "getLLMModelOptions"
    GetAnomalySettingsForMci:
      method: get
      resourcePath: /api/o11y/insight/anomaly-detection/settings/ns/{nsId}/mci/{mciId}
      description: "getAnomalySettingsForMci"
    GetAnomalySettingsForVm:
      method: get
      resourcePath: /api/o11y/insight/anomaly-detection/settings/ns/{nsId}/mci/{mciId}/vm/{vmId}
      description: "getAnomalySettingsForVm"
    GetOptions:
      method: get
      resourcePath: /api/o11y/insight/anomaly-detection/options
      description: "getOptions"
    GetAnomalyHistoryForVm:
      method: get
      resourcePath: /api/o11y/insight/anomaly-detection/ns/{nsId}/mci/{mciId}/vm/{vmId}/history
      description: "getAnomalyHistoryForVm"
    GetAnomalyHistoryForMci:
      method: get
      resourcePath: /api/o11y/insight/anomaly-detection/ns/{nsId}/mci/{mciId}/history
      description: "getAnomalyHistoryForMci"
    GetMeasurements:
      method: get
      resourcePath: /api/o11y/insight/anomaly-detection/measurement
      description: "getMeasurements"
    GetSpecificMeasurement:
      method: get
      resourcePath: /api/o11y/insight/anomaly-detection/measurement/{measurement}
      description: "getSpecificMeasurement"
    DeleteAllLLMChatSessions:
      method: delete
      resourcePath: /api/o11y/insight/llm/sessions
      description: "deleteAllLLMChatSessions"
    DeleteLLMApiKeys:
      method: delete
      resourcePath: /api/o11y/insight/llm/api-Keys
      description: "deleteLLMApiKeys"  

  mc-application-manager:
    GetCatalogDetailUsingGET:
      method: get
      resourcePath: /catalog/software/{catalogIdx}
      description: "software catalog ÎÇ¥Ïö© ÌôïÏù∏(Ïó∞Í≤∞Îêú Ï†ïÎ≥¥Îì§ÍπåÏßÄ)"
    DeleteCatalogUsingDELETE:
      method: delete
      resourcePath: /catalog/software/{catalogIdx}
      description: "software catalog ÏÇ≠Ï†ú"
    CheckConnectionUsingPOST:
      method: post
      resourcePath: /oss/connection-check
      description: ""
    CreateComponentByTextUsingPOST:
      method: post
      resourcePath: /oss/v1/components/{module}/create/{name}/text
      description: ""
    DeleteRepositoryUsingDELETE:
      method: delete
      resourcePath: /oss/v1/repositories/{module}/delete/{name}
      description: ""
    UpdateRepositoryUsingPUT:
      method: put
      resourcePath: /oss/v1/repositories/{module}/update
      description: ""
    GenerateDeploymentYamlUsingPOST:
      method: post
      resourcePath: /yaml/deployment
      description: ""
    GeneratePodYamlUsingPOST:
      method: post
      resourcePath: /yaml/pod
      description: ""
    IsOssInfoDuplicatedUsingGET:
      method: get
      resourcePath: /oss/duplicate
      description: ""
    CreateComponentUsingPOST:
      method: post
      resourcePath: /oss/v1/components/{module}/create/{name}
      description: ""
    GetRepositoryListUsingGET:
      method: get
      resourcePath: /oss/v1/repositories/{module}/list
      description: ""
    DeleteOssTypeUsingDELETE:
      method: delete
      resourcePath: /ossType/{ossTypeIdx}
      description: ""
    UpdateOssTypeUsingPATCH:
      method: patch
      resourcePath: /ossType/{ossTypeIdx}
      description: ""
    DetailOssTypeUsingGET:
      method: get
      resourcePath: /ossType/{ossTypeIdx}
      description: ""
    GetRepositoryUsingGET:
      method: get
      resourcePath: /repository/{repositoryName}
      description: ""
    InsertRepositoryUsingPOST:
      method: post
      resourcePath: /repository/{repositoryName}
      description: ""
    OpenapiJsonUsingGET:
      method: get
      resourcePath: /v3/api-docs
      description: ""
    SaveManifestUsingGET:
      method: get
      resourcePath: /manifest/download/{manifestIdx}
      description: ""
    DeleteComponentUsingDELETE:
      method: delete
      resourcePath: /oss/v1/components/{module}/delete/{id}
      description: ""
    GenerateConfigmapYamlUsingPOST:
      method: post
      resourcePath: /yaml/configmap
      description: ""
    GetManifestUsingGET:
      method: get
      resourcePath: /manifest/
      description: ""
    CreateManifestUsingPOST:
      method: post
      resourcePath: /manifest/
      description: ""
    UpdateManifestUsingPUT:
      method: put
      resourcePath: /manifest/
      description: ""
    GetManifestDetailUsingGET:
      method: get
      resourcePath: /manifest/{manifestIdx}
      description: ""
    UpdateManifestUsingDELETE:
      method: delete
      resourcePath: /manifest/{manifestIdx}
      description: ""
    GetOssListUsingGET_1:
      method: get
      resourcePath: /oss/list
      description: ""
    GetRepositoryDetailByNameUsingGET:
      method: get
      resourcePath: /oss/v1/repositories/{module}/detail/{name}
      description: ""
    RegistOssTypeUsingPOST:
      method: post
      resourcePath: /ossType
      description: ""
    GetRepositoryFileUsingGET:
      method: get
      resourcePath: /repository/file/{filename}
      description: ""
    DeleteRepositoryFileUsingDELETE:
      method: delete
      resourcePath: /repository/file/{filename}
      description: ""
    OpenapiJsonUsingGET_1:
      method: get
      resourcePath: /v3/api-docs/swagger-config
      description: ""
    GetCatalogListUsingGET:
      method: get
      resourcePath: /catalog/software/
      description: "software catalog Î¶¨Ïä§Ìä∏ Î∂àÎü¨Ïò§Í∏∞"
    CreateCatalogUsingPOST:
      method: post
      resourcePath: /catalog/software/
      description: "software catalog Îì±Î°ù"
    UpdateCatalogUsingPUT:
      method: put
      resourcePath: /catalog/software/
      description: "software catalog ÏàòÏ†ï"
    DeleteCatalogRefWorkflowUsingDELETE:
      method: delete
      resourcePath: /catalog/software/ref/{catalogIdx}/{catalogRefIdx}
      description: ""
    GetComponentDetailByNameUsingGET:
      method: get
      resourcePath: /oss/v1/components/{module}/detail/{id}
      description: ""
    GenerateHPAYamlUsingPOST:
      method: post
      resourcePath: /yaml/hpa
      description: ""
    ExecWorkflowUsingPOST:
      method: post
      resourcePath: /catalog/software/ref/workflow
      description: ""
    GetCatalogReferenceUsingGET:
      method: get
      resourcePath: /catalog/software/ref/{catalogIdx}
      description: ""
    CreateCatalogRefUsingPOST:
      method: post
      resourcePath: /catalog/software/ref/{catalogIdx}
      description: "software catalog Í¥ÄÎ†®Ï†ïÎ≥¥ Îì±Î°ù(webpage, workflow Îì±)"
    GetManifestDetailTxtUsingGET:
      method: get
      resourcePath: /manifest/{manifestIdx}/txt
      description: ""
    DetailOssUsingGET:
      method: get
      resourcePath: /oss/{ossIdx}
      description: ""
    DeleteOssUsingDELETE:
      method: delete
      resourcePath: /oss/{ossIdx}
      description: ""
    UpdateOssUsingPATCH:
      method: patch
      resourcePath: /oss/{ossIdx}
      description: ""
    GetOssTypeListUsingGET:
      method: get
      resourcePath: /ossType/list
      description: ""
    GetDockerHubListUsingGET:
      method: get
      resourcePath: /search/dockerhub/{keyword}
      description: ""
    GenerateServiceYamlUsingPOST:
      method: post
      resourcePath: /yaml/service
      description: ""
    ErrorHtmlUsingHEAD:
      method: head
      resourcePath: /error
      description: ""
    ErrorHtmlUsingPOST:
      method: post
      resourcePath: /error
      description: ""
    ErrorHtmlUsingPUT:
      method: put
      resourcePath: /error
      description: ""
    ErrorHtmlUsingDELETE:
      method: delete
      resourcePath: /error
      description: ""
    ErrorHtmlUsingOPTIONS:
      method: options
      resourcePath: /error
      description: ""
    ErrorHtmlUsingPATCH:
      method: patch
      resourcePath: /error
      description: ""
    ErrorHtmlUsingGET:
      method: get
      resourcePath: /error
      description: ""
    RegistOssUsingPOST:
      method: post
      resourcePath: /oss
      description: ""
    GetOssListUsingGET:
      method: get
      resourcePath: /oss/list/{ossTypeName}
      description: ""
    UploadFilesUsingPOST:
      method: post
      resourcePath: /repository/file/
      description: "file upload"
    RedirectToUiUsingGET:
      method: get
      resourcePath: /swagger-ui.html
      description: ""
    OpenapiYamlUsingGET:
      method: get
      resourcePath: /v3/api-docs.yaml
      description: ""
    GetComponentListUsingGET:
      method: get
      resourcePath: /oss/v1/components/{module}/list/{name}
      description: ""
    CreateRepositoryUsingPOST:
      method: post
      resourcePath: /oss/v1/repositories/{module}/create
      description: ""
    CreateRepositoryUsingPOST_1:
      method: post
      resourcePath: /repository/
      description: ""
    UpdateRepositoryUsingPUT_1:
      method: put
      resourcePath: /repository/
      description: ""
    DeleteRepositoryUsingDELETE_1:
      method: delete
      resourcePath: /repository/
      description: ""
    GetRepositoryListUsingGET_1:
      method: get
      resourcePath: /repository/
      description: ""
    GetArtifactHubListUsingGET:
      method: get
      resourcePath: /search/artifacthub/{keyword}
      description: ""

  mc-workflow-manager:
    IsWorkflowNameDuplicatedUsingGET:
      method: get
      resourcePath: /workflow/name/duplicate
      description: ""
    GetWorkflowParamListUsingGET:
      method: get
      resourcePath: /workflow/param/list
      description: ""
    RegistWorkflowStageUsingPOST:
      method: post
      resourcePath: /workflowStage
      description: ""
    DetailEventListenerUsingGET:
      method: get
      resourcePath: /eventlistener/{eventListenerIdx}
      description: ""
    DeleteEventListnerUsingDELETE:
      method: delete
      resourcePath: /eventlistener/{eventListenerIdx}
      description: ""
    UpdateEventListnerUsingPATCH:
      method: patch
      resourcePath: /eventlistener/{eventListenerIdx}
      description: ""
    DetailOssTypeUsingGET:
      method: get
      resourcePath: /ossType/{ossTypeIdx}
      description: ""
    DeleteOssTypeUsingDELETE:
      method: delete
      resourcePath: /ossType/{ossTypeIdx}
      description: ""
    UpdateOssTypeUsingPATCH:
      method: patch
      resourcePath: /ossType/{ossTypeIdx}
      description: ""
    OpenapiYamlUsingGET:
      method: get
      resourcePath: /v3/api-docs.yaml
      description: ""
    OpenapiJsonUsingGET_1:
      method: get
      resourcePath: /v3/api-docs/swagger-config
      description: ""
    GetWorkflowHistoryListUsingGET:
      method: get
      resourcePath: /workflow/history/{workflowIdx}
      description: ""
    DetailOssUsingGET:
      method: get
      resourcePath: /oss/{ossIdx}
      description: ""
    DeleteOssUsingDELETE:
      method: delete
      resourcePath: /oss/{ossIdx}
      description: ""
    UpdateOssUsingPATCH:
      method: patch
      resourcePath: /oss/{ossIdx}
      description: ""
    RegistOssTypeUsingPOST:
      method: post
      resourcePath: /ossType
      description: ""
    OpenapiJsonUsingGET:
      method: get
      resourcePath: /v3/api-docs
      description: ""
    RunWorkflowGetUsingGET:
      method: get
      resourcePath: /workflow/run/{workflowIdx}
      description: ""
    DetailWorkflowStageUsingGET:
      method: get
      resourcePath: /workflowStage/{workflowStageIdx}
      description: ""
    DeleteWorkflowStageUsingDELETE:
      method: delete
      resourcePath: /workflowStage/{workflowStageIdx}
      description: ""
    UpdateWorkflowStageUsingPATCH:
      method: patch
      resourcePath: /workflowStage/{workflowStageIdx}
      description: ""
    GetEventListenerListUsingGET:
      method: get
      resourcePath: /eventlistener/list
      description: ""
    RegistWorkflowUsingPOST:
      method: post
      resourcePath: /workflow
      description: ""
    GetWorkflowStageListUsingGET:
      method: get
      resourcePath: /workflow/workflowStageList
      description: ""
    GetWorkflowUsingGET:
      method: get
      resourcePath: /workflow/{workflowIdx}
      description: ""
    DeleteWorkflowUsingDELETE:
      method: delete
      resourcePath: /workflow/{workflowIdx}
      description: ""
    UpdateWorkflowUsingPATCH:
      method: patch
      resourcePath: /workflow/{workflowIdx}
      description: ""
    GetDefaultWorkflowStageUsingGET:
      method: get
      resourcePath: /workflowStage/default/script/{workflowStageTypeName}
      description: ""
    RegistEventListnerUsingPOST:
      method: post
      resourcePath: /eventlistener
      description: ""
    CheckConnectionUsingPOST:
      method: post
      resourcePath: /oss/connection-check
      description: ""
    GetWorkflowListUsingGET:
      method: get
      resourcePath: /workflow/list
      description: ""
    GetWorkflowTemplateUsingGET:
      method: get
      resourcePath: /workflow/template/{workflowName}
      description: ""
    RedirectToUiUsingGET:
      method: get
      resourcePath: /swagger-ui.html
      description: ""
    RegistWorkflowStageUsingPOST_1:
      method: post
      resourcePath: /workflowStageType
      description: ""
    GetWorkflowStageListUsingGET_2:
      method: get
      resourcePath: /workflowStageType/list
      description: ""
    GetOssListUsingGET_1:
      method: get
      resourcePath: /oss/list
      description: ""
    GetOssTypeListUsingGET:
      method: get
      resourcePath: /ossType/list
      description: ""
    IsWorkflowStageNameDuplicatedUsingGET:
      method: get
      resourcePath: /workflowStage/duplicate
      description: ""
    DetailWorkflowStageTypeUsingGET:
      method: get
      resourcePath: /workflowStageType/{workflowStageTypeIdx}
      description: ""
    DeleteWorkflowStageTypeUsingDELETE:
      method: delete
      resourcePath: /workflowStageType/{workflowStageTypeIdx}
      description: ""
    UpdateWorkflowStageTypeUsingPATCH:
      method: patch
      resourcePath: /workflowStageType/{workflowStageTypeIdx}
      description: ""
    GetWorkflowStageListUsingGET_1:
      method: get
      resourcePath: /workflowStage/list
      description: ""
    RunEventListenerUsingGET:
      method: get
      resourcePath: /eventlistener/run/{eventListenerIdx}
      description: ""
    RegistOssUsingPOST:
      method: post
      resourcePath: /oss
      description: ""
    IsOssInfoDuplicatedUsingGET:
      method: get
      resourcePath: /oss/duplicate
      description: ""
    GetOssListUsingGET:
      method: get
      resourcePath: /oss/list/{ossTypeName}
      description: ""
    RunWorkflowPostUsingPOST:
      method: post
      resourcePath: /workflow/run
      description: ""

  mc-cost-optimizer:
    GetProjects:
      method: get
      resourcePath: /api/v2/getProjects
      description: "ÏõåÌÅ¨Ïä§ÌéòÏù¥Ïä§Ïóê ÏÜçÌïú ÌîÑÎ°úÏ†ùÌä∏ Î™©Î°ùÏùÑ Ï°∞ÌöåÌï©ÎãàÎã§."
    GetUnusedRec:
      method: post
      resourcePath: /api/v2/opti/unusedRec
      description: "Ïù¥Î≤àÎã¨ CSPÎ≥Ñ ÏöîÏïΩÎêú ÎπåÎßÅ Ïù∏Î≥¥Ïù¥Ïä§Î•º ÌôïÏù∏ÌïúÎã§."
    GetSummary:
      method: post
      resourcePath: /api/v2/invoice/getSummary
      description: "CSPÎ≥Ñ ÎπåÎßÅ Ïù∏Î≥¥Ïù¥Ïä§ ÎπÑÏö©ÏùÑ ÎÇ†ÏßúÎ≥ÑÎ°ú ÌôïÏù∏ÌïúÎã§."
    GetInvoice:
      method: post
      resourcePath: /api/v2/invoice/getInvoice
      description: "Ïù¥Î≤àÎã¨ ÎπåÎßÅ Ïù∏Î≥¥Ïù¥Ïä§ ÎÇ¥Ïó≠ÏùÑ ÌôïÏù∏ÌïúÎã§."
    GetBillingBaseInfo:
      method: post
      resourcePath: /api/v2/invoice/getBillingBaseInfo
      description: "Ïù¥Î≤àÎã¨ CSPÎ≥Ñ ÏöîÏïΩÎêú ÎπåÎßÅ Ïù∏Î≥¥Ïù¥Ïä§Î•º ÌôïÏù∏ÌïúÎã§."
    GetTop5Bill:
      method: post
      resourcePath: /api/v2/getTop5Bill
      description: "Ïù¥Î≤àÎã¨Ïóê ÏÇ¨Ïö©Ìïú ÎπÑÏö© ÏÉÅÏúÑ 5Í∞úÏùò Î¶¨ÏÜåÏä§ÏôÄ ÎπÑÏö©ÏùÑ ÌôïÏù∏Ìï©ÎãàÎã§."
    GetCurMonthBill:
      method: post
      resourcePath: /api/v2/getCurMonthBill
      description: "ÏßÄÎÇúÎã¨ ÎåÄÎπÑ Ïù¥Î≤àÎã¨ ÎπÑÏö©ÏùÑ ÌôïÏù∏Ìï©ÎãàÎã§."
    GetBillAsset:
      method: post
      resourcePath: /api/v2/getBillAsset
      description: "Ïù¥Î≤àÎã¨ ÏÇ¨Ïö©Ìïú Î¶¨ÏÜåÏä§Ïùò unitÍ≥º ÎπÑÏö©ÏùÑ ÌôïÏù∏Ìï©ÎãàÎã§."
    GetWorkspaces:
      method: get
      resourcePath: /api/v2/getWorkspaces
      description: "ÏõåÌÅ¨Ïä§ÌéòÏù¥Ïä§ Î™©Î°ùÏùÑ Ï°∞ÌöåÌï©ÎãàÎã§."

  mc-data-manager:
    GenerateWindows:
      method: post
      resourcePath: /generate/windows
      description: "Generate test data on on-premise Windows."
    MigrationDynamodbFirestore:
      method: post
      resourcePath: /migration/dynamodb/firestore
      description: "Migrate data stored in AWS DynamoDB to Google Cloud Firestore."
    MigrationLinuxNcp:
      method: post
      resourcePath: /migration/linux/ncp
      description: "Migrate data stored in a Linux-based system to NCP Object Storage."
    MigrationNcpLinux:
      method: post
      resourcePath: /migration/ncp/linux
      description: "Migrate data stored in NCP Object Storage to a Linux-based system."
    MigrationNcpWindows:
      method: post
      resourcePath: /migration/ncp/windows
      description: "Migrate data stored in NCP Object Storage to a Windows-based system."
    MigrationGcpWindows:
      method: post
      resourcePath: /migration/gcp/windows
      description: "Migrate data stored in GCP Cloud Storage to a Windows-based system."
    MigrationLinuxS3:
      method: post
      resourcePath: /migration/linux/s3
      description: "Migrate data stored in a Linux-based system to AWS S3."
    MigrationNcpS3:
      method: post
      resourcePath: /migration/ncp/s3
      description: "Migrate data stored in NCP Object Storage to AWS S3."
    MigrationS3Windows:
      method: post
      resourcePath: /migration/s3/windows
      description: "Migrate data stored in AWS S3 to a Windows-based system."
    GenerateDynamodb:
      method: post
      resourcePath: /generate/dynamodb
      description: "Generate test data on AWS DynamoDB."
    MigrationDynamodbMongodb:
      method: post
      resourcePath: /migration/dynamodb/mongodb
      description: "Migrate data stored in AWS DynamoDB to Naver Cloud MongoDB."
    MigrationLinuxGcp:
      method: post
      resourcePath: /migration/linux/gcp
      description: "Migrate data stored in a Linux-based system to GCP Cloud Storage."
    MigrationMysql:
      method: post
      resourcePath: /migration/mysql
      description: "Migrate data from one MySQL database to another MySQL database."
    MigrationWindowsS3:
      method: post
      resourcePath: /migration/windows/s3
      description: "Migrate data stored in a Windows-based system to AWS S3."
    GenerateFirestore:
      method: post
      resourcePath: /generate/firestore
      description: "Generate test data on GCP Firestore."
    GenerateMongodb:
      method: post
      resourcePath: /generate/mongodb
      description: "Generate test data on NCP MongoDB."
    MigrationFirestoreMongodb:
      method: post
      resourcePath: /migration/firestore/mongodb
      description: "Migrate data stored in Google Cloud Firestore to Naver Cloud MongoDB."
    MigrationS3Linux:
      method: post
      resourcePath: /migration/s3/linux
      description: "Migrate data stored in AWS S3 to a Linux-based system."
    GenerateGcp:
      method: post
      resourcePath: /generate/gcp
      description: "Generate test data on GCP Cloud Storage."
    GenerateMysql:
      method: post
      resourcePath: /generate/mysql
      description: "Generate test data on MySQL."
    MigrationFirestoreDynamodb:
      method: post
      resourcePath: /migration/firestore/dynamodb
      description: "Migrate data stored in Google Cloud Firestore to AWS DynamoDB."
    MigrationGcpNcp:
      method: post
      resourcePath: /migration/gcp/ncp
      description: "Migrate data stored in GCP Cloud Storage to NCP Object Storage."
    MigrationNcpGcp:
      method: post
      resourcePath: /migration/ncp/gcp
      description: "Migrate data stored in NCP Object Storage to GCP Cloud Storage."
    GenerateLinux:
      method: post
      resourcePath: /generate/linux
      description: "Generate test data on on-premise Linux."
    GenerateNcp:
      method: post
      resourcePath: /generate/ncp
      description: "Generate test data on NCP Object Storage."
    MigrationGcpS3:
      method: post
      resourcePath: /migration/gcp/s3
      description: "Migrate data stored in GCP Cloud Storage to AWS S3."
    MigrationMongodbDynamodb:
      method: post
      resourcePath: /migration/mongodb/dynamodb
      description: "Migrate data stored in Naver Cloud MongoDB to AWS DynamoDB."
    GenerateS3:
      method: post
      resourcePath: /generate/s3
      description: "Generate test data on AWS S3."
    MigrationS3Gcp:
      method: post
      resourcePath: /migration/s3/gcp
      description: "Migrate data stored in AWS S3 to Google Cloud Storage."
    MigrationS3Ncp:
      method: post
      resourcePath: /migration/s3/ncp
      description: "Migrate data stored in AWS S3 to Naver Cloud Object Storage."
    MigrationGcpLinux:
      method: post
      resourcePath: /migration/gcp/linux
      description: "Migrate data stored in GCP Cloud Storage to a Linux-based system."
    MigrationMongodbFirestore:
      method: post
      resourcePath: /migration/mongodb/firestore
      description: "Migrate data stored in Naver Cloud MongoDB to Google Cloud Firestore."
    MigrationWindowsGcp:
      method: post
      resourcePath: /migration/windows/gcp
      description: "Migrate data stored in a Windows-based system to GCP Cloud Storage."
    MigrationWindowsNcp:
      method: post
      resourcePath: /migration/windows/ncp
      description: "Migrate data stored in a Windows-based system to NCP Object Storage."
